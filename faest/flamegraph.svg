<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="550" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="533.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="533.00"> </text><svg id="frames" x="10" width="1180" total_samples="9213649666"><g><title>__clone3 (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="469" width="0.0225%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="479.50"></text></g><g><title>start_thread (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="453" width="0.0225%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="463.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="437" width="0.0225%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="447.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="421" width="0.0225%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="431.50"></text></g><g><title>__pthread_getattr_np (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="405" width="0.0225%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="415.50"></text></g><g><title>__GI___libc_malloc (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="389" width="0.0225%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="399.50"></text></g><g><title>tcache_init (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="373" width="0.0225%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="383.50"></text></g><g><title>tcache_init (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="357" width="0.0225%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="367.50"></text></g><g><title>arena_get2 (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="341" width="0.0225%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="351.50"></text></g><g><title>arena_get2 (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="325" width="0.0225%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="335.50"></text></g><g><title>_int_new_arena (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="309" width="0.0225%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="319.50"></text></g><g><title>new_heap (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="293" width="0.0225%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="303.50"></text></g><g><title>alloc_new_heap (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="277" width="0.0225%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="287.50"></text></g><g><title>__GI___mmap64 (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="261" width="0.0225%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="271.50"></text></g><g><title>__GI___mmap64 (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="245" width="0.0225%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="229" width="0.0225%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="239.50"></text></g><g><title>do_syscall_64 (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="213" width="0.0225%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="223.50"></text></g><g><title>x64_sys_call (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="197" width="0.0225%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="207.50"></text></g><g><title>__x64_sys_mmap (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="181" width="0.0225%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="191.50"></text></g><g><title>ksys_mmap_pgoff (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="165" width="0.0225%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="175.50"></text></g><g><title>vm_mmap_pgoff (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="149" width="0.0225%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="159.50"></text></g><g><title>do_mmap (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="133" width="0.0225%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="143.50"></text></g><g><title>mmap_region (2,076,051 samples, 0.02%)</title><rect x="0.0000%" y="117" width="0.0225%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="2076051"/><text x="0.2500%" y="127.50"></text></g><g><title>_start (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="469" width="0.1629%" height="15" fill="rgb(247,18,42)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="479.50"></text></g><g><title>_dl_start (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="453" width="0.1629%" height="15" fill="rgb(241,131,45)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="463.50"></text></g><g><title>_dl_start_final (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="437" width="0.1629%" height="15" fill="rgb(249,31,29)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="447.50"></text></g><g><title>_dl_sysdep_start (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="421" width="0.1629%" height="15" fill="rgb(225,111,53)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="431.50"></text></g><g><title>dl_main (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="405" width="0.1629%" height="15" fill="rgb(238,160,17)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="415.50"></text></g><g><title>_dl_map_object_deps (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="389" width="0.1629%" height="15" fill="rgb(214,148,48)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="399.50"></text></g><g><title>_dl_catch_exception (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="373" width="0.1629%" height="15" fill="rgb(232,36,49)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="383.50"></text></g><g><title>openaux (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="357" width="0.1629%" height="15" fill="rgb(209,103,24)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="367.50"></text></g><g><title>_dl_map_object (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="341" width="0.1629%" height="15" fill="rgb(229,88,8)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="351.50"></text></g><g><title>_dl_map_object_from_fd (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="325" width="0.1629%" height="15" fill="rgb(213,181,19)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="335.50"></text></g><g><title>_dl_map_segments (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="309" width="0.1629%" height="15" fill="rgb(254,191,54)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="319.50"></text></g><g><title>__mmap64 (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="293" width="0.1629%" height="15" fill="rgb(241,83,37)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="303.50"></text></g><g><title>__mmap64 (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="277" width="0.1629%" height="15" fill="rgb(233,36,39)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="261" width="0.1629%" height="15" fill="rgb(226,3,54)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="271.50"></text></g><g><title>do_syscall_64 (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="245" width="0.1629%" height="15" fill="rgb(245,192,40)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="255.50"></text></g><g><title>x64_sys_call (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="229" width="0.1629%" height="15" fill="rgb(238,167,29)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="239.50"></text></g><g><title>__x64_sys_mmap (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="213" width="0.1629%" height="15" fill="rgb(232,182,51)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="223.50"></text></g><g><title>ksys_mmap_pgoff (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="197" width="0.1629%" height="15" fill="rgb(231,60,39)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="207.50"></text></g><g><title>vm_mmap_pgoff (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="181" width="0.1629%" height="15" fill="rgb(208,69,12)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="191.50"></text></g><g><title>do_mmap (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="165" width="0.1629%" height="15" fill="rgb(235,93,37)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="175.50"></text></g><g><title>mmap_region (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="149" width="0.1629%" height="15" fill="rgb(213,116,39)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="159.50"></text></g><g><title>perf_event_mmap (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="133" width="0.1629%" height="15" fill="rgb(222,207,29)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="143.50"></text></g><g><title>perf_event_mmap_event (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="117" width="0.1629%" height="15" fill="rgb(206,96,30)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="127.50"></text></g><g><title>perf_iterate_sb (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="101" width="0.1629%" height="15" fill="rgb(218,138,4)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="111.50"></text></g><g><title>perf_iterate_ctx (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="85" width="0.1629%" height="15" fill="rgb(250,191,14)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="95.50"></text></g><g><title>perf_event_mmap_output (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="69" width="0.1629%" height="15" fill="rgb(239,60,40)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="79.50"></text></g><g><title>perf_output_copy (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="53" width="0.1629%" height="15" fill="rgb(206,27,48)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="63.50"></text></g><g><title>__output_copy (15,011,186 samples, 0.16%)</title><rect x="0.0225%" y="37" width="0.1629%" height="15" fill="rgb(225,35,8)" fg:x="2076051" fg:w="15011186"/><text x="0.2725%" y="47.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="469" width="0.0110%" height="15" fill="rgb(250,213,24)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="479.50"></text></g><g><title>do_syscall_64 (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="453" width="0.0110%" height="15" fill="rgb(247,123,22)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="463.50"></text></g><g><title>x64_sys_call (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="437" width="0.0110%" height="15" fill="rgb(231,138,38)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="447.50"></text></g><g><title>__x64_sys_execve (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="421" width="0.0110%" height="15" fill="rgb(231,145,46)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="431.50"></text></g><g><title>do_execveat_common.isra.0 (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="405" width="0.0110%" height="15" fill="rgb(251,118,11)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="415.50"></text></g><g><title>bprm_execve (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="389" width="0.0110%" height="15" fill="rgb(217,147,25)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="399.50"></text></g><g><title>bprm_execve.part.0 (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="373" width="0.0110%" height="15" fill="rgb(247,81,37)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="383.50"></text></g><g><title>exec_binprm (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="357" width="0.0110%" height="15" fill="rgb(209,12,38)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="367.50"></text></g><g><title>search_binary_handler (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="341" width="0.0110%" height="15" fill="rgb(227,1,9)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="351.50"></text></g><g><title>load_elf_binary (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="325" width="0.0110%" height="15" fill="rgb(248,47,43)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="335.50"></text></g><g><title>setup_arg_pages (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="309" width="0.0110%" height="15" fill="rgb(221,10,30)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="319.50"></text></g><g><title>shift_arg_pages (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="293" width="0.0110%" height="15" fill="rgb(210,229,1)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="303.50"></text></g><g><title>vma_expand (1,015,152 samples, 0.01%)</title><rect x="0.1855%" y="277" width="0.0110%" height="15" fill="rgb(222,148,37)" fg:x="17087237" fg:w="1015152"/><text x="0.4355%" y="287.50"></text></g><g><title>faest-933d44b75 (18,151,766 samples, 0.20%)</title><rect x="0.0000%" y="485" width="0.1970%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="18151766"/><text x="0.2500%" y="495.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::ExtendableOutput&gt;::finalize_xof (3,948,530 samples, 0.04%)</title><rect x="0.1970%" y="453" width="0.0429%" height="15" fill="rgb(247,98,35)" fg:x="18151766" fg:w="3948530"/><text x="0.4470%" y="463.50"></text></g><g><title>&lt;faest::random_oracles::Hasher128Reader as faest::random_oracles::Reader&gt;::read (7,652,447 samples, 0.08%)</title><rect x="0.2399%" y="453" width="0.0831%" height="15" fill="rgb(247,138,52)" fg:x="22100296" fg:w="7652447"/><text x="0.4899%" y="463.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (3,755,787 samples, 0.04%)</title><rect x="0.3229%" y="453" width="0.0408%" height="15" fill="rgb(213,79,30)" fg:x="29752743" fg:w="3755787"/><text x="0.5729%" y="463.50"></text></g><g><title>&lt;faest::random_oracles::PRG256 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (3,959,280 samples, 0.04%)</title><rect x="0.3637%" y="453" width="0.0430%" height="15" fill="rgb(246,177,23)" fg:x="33508530" fg:w="3959280"/><text x="0.6137%" y="463.50"></text></g><g><title>[anon] (38,783,527 samples, 0.42%)</title><rect x="0.1970%" y="469" width="0.4209%" height="15" fill="rgb(230,62,27)" fg:x="18151766" fg:w="38783527"/><text x="0.4470%" y="479.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (19,467,483 samples, 0.21%)</title><rect x="0.4067%" y="453" width="0.2113%" height="15" fill="rgb(216,154,8)" fg:x="37467810" fg:w="19467483"/><text x="0.6567%" y="463.50"></text></g><g><title>&lt;aes::ni::Aes256Enc as crypto_common::KeyInit&gt;::new (3,960,596 samples, 0.04%)</title><rect x="0.6179%" y="453" width="0.0430%" height="15" fill="rgb(244,35,45)" fg:x="56935293" fg:w="3960596"/><text x="0.8679%" y="463.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::ExtendableOutput&gt;::finalize_xof (3,830,767 samples, 0.04%)</title><rect x="0.6609%" y="453" width="0.0416%" height="15" fill="rgb(251,115,12)" fg:x="60895889" fg:w="3830767"/><text x="0.9109%" y="463.50"></text></g><g><title>&lt;faest::random_oracles::Hasher256Reader as faest::random_oracles::Reader&gt;::read (7,860,426 samples, 0.09%)</title><rect x="0.7025%" y="453" width="0.0853%" height="15" fill="rgb(240,54,50)" fg:x="64726656" fg:w="7860426"/><text x="0.9525%" y="463.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (3,981,236 samples, 0.04%)</title><rect x="0.7878%" y="453" width="0.0432%" height="15" fill="rgb(233,84,52)" fg:x="72587082" fg:w="3981236"/><text x="1.0378%" y="463.50"></text></g><g><title>faest::aes::aes_enc_bkwd (97,658,505 samples, 1.06%)</title><rect x="0.8669%" y="437" width="1.0599%" height="15" fill="rgb(207,117,47)" fg:x="79875272" fg:w="97658505"/><text x="1.1169%" y="447.50"></text></g><g><title>faest::aes::aes_enc_cstrnts (354,376,486 samples, 3.85%)</title><rect x="0.8310%" y="453" width="3.8462%" height="15" fill="rgb(249,43,39)" fg:x="76568318" fg:w="354376486"/><text x="1.0810%" y="463.50">faes..</text></g><g><title>faest::aes::aes_enc_fwd (253,411,027 samples, 2.75%)</title><rect x="1.9269%" y="437" width="2.7504%" height="15" fill="rgb(209,38,44)" fg:x="177533777" fg:w="253411027"/><text x="2.1769%" y="447.50">fa..</text></g><g><title>&lt;T as faest::fields::large_fields::ByteCombine&gt;::byte_combine (18,555,768 samples, 0.20%)</title><rect x="4.4758%" y="421" width="0.2014%" height="15" fill="rgb(236,212,23)" fg:x="412389036" fg:w="18555768"/><text x="4.7258%" y="431.50"></text></g><g><title>&lt;faest::universal_hashing::ZKHasher&lt;F&gt; as faest::universal_hashing::ZKHasherProcess&lt;F&gt;&gt;::update (11,255,794 samples, 0.12%)</title><rect x="4.8836%" y="437" width="0.1222%" height="15" fill="rgb(242,79,21)" fg:x="449958235" fg:w="11255794"/><text x="5.1336%" y="447.50"></text></g><g><title>faest::aes::aes_enc_bkwd (7,791,892 samples, 0.08%)</title><rect x="5.0058%" y="421" width="0.0846%" height="15" fill="rgb(211,96,35)" fg:x="461214029" fg:w="7791892"/><text x="5.2558%" y="431.50"></text></g><g><title>faest::aes::aes_enc_cstrnts (23,455,308 samples, 0.25%)</title><rect x="5.0058%" y="437" width="0.2546%" height="15" fill="rgb(253,215,40)" fg:x="461214029" fg:w="23455308"/><text x="5.2558%" y="447.50"></text></g><g><title>faest::aes::aes_enc_fwd (15,663,416 samples, 0.17%)</title><rect x="5.0903%" y="421" width="0.1700%" height="15" fill="rgb(211,81,21)" fg:x="469005921" fg:w="15663416"/><text x="5.3403%" y="431.50"></text></g><g><title>faest::aes::aes_prove (60,769,158 samples, 0.66%)</title><rect x="4.6772%" y="453" width="0.6596%" height="15" fill="rgb(208,190,38)" fg:x="430944804" fg:w="60769158"/><text x="4.9272%" y="463.50"></text></g><g><title>faest::aes::aes_key_exp_cstrnts (7,044,625 samples, 0.08%)</title><rect x="5.2603%" y="437" width="0.0765%" height="15" fill="rgb(235,213,38)" fg:x="484669337" fg:w="7044625"/><text x="5.5103%" y="447.50"></text></g><g><title>&lt;faest::universal_hashing::ZKHasher&lt;F&gt; as faest::universal_hashing::ZKHasherProcess&lt;F&gt;&gt;::update (3,871,691 samples, 0.04%)</title><rect x="5.5071%" y="437" width="0.0420%" height="15" fill="rgb(237,122,38)" fg:x="507400832" fg:w="3871691"/><text x="5.7571%" y="447.50"></text></g><g><title>faest::aes::aes_enc_cstrnts (3,969,609 samples, 0.04%)</title><rect x="5.5491%" y="437" width="0.0431%" height="15" fill="rgb(244,218,35)" fg:x="511272523" fg:w="3969609"/><text x="5.7991%" y="447.50"></text></g><g><title>faest::aes::aes_enc_fwd (3,969,609 samples, 0.04%)</title><rect x="5.5491%" y="421" width="0.0431%" height="15" fill="rgb(240,68,47)" fg:x="511272523" fg:w="3969609"/><text x="5.7991%" y="431.50"></text></g><g><title>faest::aes::aes_verify (27,414,011 samples, 0.30%)</title><rect x="5.3368%" y="453" width="0.2975%" height="15" fill="rgb(210,16,53)" fg:x="491713962" fg:w="27414011"/><text x="5.5868%" y="463.50"></text></g><g><title>faest::aes::aes_key_exp_cstrnts (3,885,841 samples, 0.04%)</title><rect x="5.5922%" y="437" width="0.0422%" height="15" fill="rgb(235,124,12)" fg:x="515242132" fg:w="3885841"/><text x="5.8422%" y="447.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::try_fold (3,948,426 samples, 0.04%)</title><rect x="5.8485%" y="437" width="0.0429%" height="15" fill="rgb(224,169,11)" fg:x="538861123" fg:w="3948426"/><text x="6.0985%" y="447.50"></text></g><g><title>faest::em::em_enc_bkwd (93,495,405 samples, 1.01%)</title><rect x="5.8914%" y="437" width="1.0147%" height="15" fill="rgb(250,166,2)" fg:x="542809549" fg:w="93495405"/><text x="6.1414%" y="447.50"></text></g><g><title>faest::em::em_enc_cstrnts (348,588,391 samples, 3.78%)</title><rect x="5.6343%" y="453" width="3.7834%" height="15" fill="rgb(242,216,29)" fg:x="519127973" fg:w="348588391"/><text x="5.8843%" y="463.50">faes..</text></g><g><title>faest::em::em_enc_fwd (231,411,410 samples, 2.51%)</title><rect x="6.9061%" y="437" width="2.5116%" height="15" fill="rgb(230,116,27)" fg:x="636304954" fg:w="231411410"/><text x="7.1561%" y="447.50">fa..</text></g><g><title>&lt;T as faest::fields::large_fields::ByteCombine&gt;::byte_combine (3,937,737 samples, 0.04%)</title><rect x="9.3750%" y="421" width="0.0427%" height="15" fill="rgb(228,99,48)" fg:x="863778627" fg:w="3937737"/><text x="9.6250%" y="431.50"></text></g><g><title>faest::em::em_verify (11,448,232 samples, 0.12%)</title><rect x="9.4177%" y="453" width="0.1243%" height="15" fill="rgb(253,11,6)" fg:x="867716364" fg:w="11448232"/><text x="9.6677%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,795,777 samples, 0.04%)</title><rect x="9.5008%" y="437" width="0.0412%" height="15" fill="rgb(247,143,39)" fg:x="875368819" fg:w="3795777"/><text x="9.7508%" y="447.50"></text></g><g><title>&lt;faest::universal_hashing::ZKHasher&lt;F&gt; as faest::universal_hashing::ZKHasherProcess&lt;F&gt;&gt;::update (3,918,419 samples, 0.04%)</title><rect x="9.5839%" y="437" width="0.0425%" height="15" fill="rgb(236,97,10)" fg:x="883026803" fg:w="3918419"/><text x="9.8339%" y="447.50"></text></g><g><title>_ZN4core3ptr1017drop_in_place$LT$alloc..boxed..Box$LT$generic_array..GenericArray$LT$$LP$alloc..vec..Vec$LT$generic_array..GenericArray$LT$u8$C$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$GT$$GT$$C$alloc..vec..Vec$LT$generic_array..GenericArray$LT$u8$C$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$GT$$GT$$RP$$C$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$GT$$GT$$GT$17hca46da5c9e122ed1E (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="437" width="0.0433%" height="15" fill="rgb(233,208,19)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="447.50"></text></g><g><title>__GI___libc_free (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="421" width="0.0433%" height="15" fill="rgb(216,164,2)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="431.50"></text></g><g><title>_int_free (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="405" width="0.0433%" height="15" fill="rgb(220,129,5)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="415.50"></text></g><g><title>heap_trim (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="389" width="0.0433%" height="15" fill="rgb(242,17,10)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="399.50"></text></g><g><title>shrink_heap (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="373" width="0.0433%" height="15" fill="rgb(242,107,0)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="383.50"></text></g><g><title>__GI_madvise (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="357" width="0.0433%" height="15" fill="rgb(251,28,31)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="341" width="0.0433%" height="15" fill="rgb(233,223,10)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="351.50"></text></g><g><title>do_syscall_64 (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="325" width="0.0433%" height="15" fill="rgb(215,21,27)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="335.50"></text></g><g><title>x64_sys_call (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="309" width="0.0433%" height="15" fill="rgb(232,23,21)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="319.50"></text></g><g><title>__x64_sys_madvise (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="293" width="0.0433%" height="15" fill="rgb(244,5,23)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="303.50"></text></g><g><title>do_madvise (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="277" width="0.0433%" height="15" fill="rgb(226,81,46)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="287.50"></text></g><g><title>madvise_walk_vmas (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="261" width="0.0433%" height="15" fill="rgb(247,70,30)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="271.50"></text></g><g><title>madvise_vma_behavior (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="245" width="0.0433%" height="15" fill="rgb(212,68,19)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="255.50"></text></g><g><title>zap_page_range_single (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="229" width="0.0433%" height="15" fill="rgb(240,187,13)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="239.50"></text></g><g><title>tlb_finish_mmu (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="213" width="0.0433%" height="15" fill="rgb(223,113,26)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="223.50"></text></g><g><title>tlb_batch_pages_flush (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="197" width="0.0433%" height="15" fill="rgb(206,192,2)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="207.50"></text></g><g><title>free_pages_and_swap_cache (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="181" width="0.0433%" height="15" fill="rgb(241,108,4)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="191.50"></text></g><g><title>release_pages (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="165" width="0.0433%" height="15" fill="rgb(247,173,49)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="175.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (3,986,404 samples, 0.04%)</title><rect x="9.6264%" y="149" width="0.0433%" height="15" fill="rgb(224,114,35)" fg:x="886945222" fg:w="3986404"/><text x="9.8764%" y="159.50"></text></g><g><title>tlb_finish_mmu (3,956,267 samples, 0.04%)</title><rect x="9.6697%" y="213" width="0.0429%" height="15" fill="rgb(245,159,27)" fg:x="890931626" fg:w="3956267"/><text x="9.9197%" y="223.50"></text></g><g><title>tlb_batch_pages_flush (3,956,267 samples, 0.04%)</title><rect x="9.6697%" y="197" width="0.0429%" height="15" fill="rgb(245,172,44)" fg:x="890931626" fg:w="3956267"/><text x="9.9197%" y="207.50"></text></g><g><title>free_pages_and_swap_cache (3,956,267 samples, 0.04%)</title><rect x="9.6697%" y="181" width="0.0429%" height="15" fill="rgb(236,23,11)" fg:x="890931626" fg:w="3956267"/><text x="9.9197%" y="191.50"></text></g><g><title>release_pages (3,956,267 samples, 0.04%)</title><rect x="9.6697%" y="165" width="0.0429%" height="15" fill="rgb(205,117,38)" fg:x="890931626" fg:w="3956267"/><text x="9.9197%" y="175.50"></text></g><g><title>uncharge_folio (3,956,267 samples, 0.04%)</title><rect x="9.6697%" y="149" width="0.0429%" height="15" fill="rgb(237,72,25)" fg:x="890931626" fg:w="3956267"/><text x="9.9197%" y="159.50"></text></g><g><title>_ZN4core3ptr1109drop_in_place$LT$alloc..boxed..Box$LT$generic_array..GenericArray$LT$$LP$alloc..vec..Vec$LT$generic_array..GenericArray$LT$u8$C$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$GT$$GT$$C$alloc..vec..Vec$LT$generic_array..GenericArray$LT$u8$C$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B0$GT$$GT$$GT$$RP$$C$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UInt$LT$typenum..uint..UTerm$C$typenum..bit..B1$GT$$C$typenum..bit..B0$GT$$C$typenum..bit..B1$GT$$C$typenum..bit..B1$GT$$C$typenum..bit..B0$GT$$GT$$GT$$GT$17h9cf1ca2f753d58deE (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="437" width="0.0849%" height="15" fill="rgb(244,70,9)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="447.50"></text></g><g><title>__GI___libc_free (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="421" width="0.0849%" height="15" fill="rgb(217,125,39)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="431.50"></text></g><g><title>_int_free (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="405" width="0.0849%" height="15" fill="rgb(235,36,10)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="415.50"></text></g><g><title>heap_trim (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="389" width="0.0849%" height="15" fill="rgb(251,123,47)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="399.50"></text></g><g><title>shrink_heap (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="373" width="0.0849%" height="15" fill="rgb(221,13,13)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="383.50"></text></g><g><title>__GI_madvise (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="357" width="0.0849%" height="15" fill="rgb(238,131,9)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="341" width="0.0849%" height="15" fill="rgb(211,50,8)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="351.50"></text></g><g><title>do_syscall_64 (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="325" width="0.0849%" height="15" fill="rgb(245,182,24)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="335.50"></text></g><g><title>x64_sys_call (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="309" width="0.0849%" height="15" fill="rgb(242,14,37)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="319.50"></text></g><g><title>__x64_sys_madvise (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="293" width="0.0849%" height="15" fill="rgb(246,228,12)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="303.50"></text></g><g><title>do_madvise (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="277" width="0.0849%" height="15" fill="rgb(213,55,15)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="287.50"></text></g><g><title>madvise_walk_vmas (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="261" width="0.0849%" height="15" fill="rgb(209,9,3)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="271.50"></text></g><g><title>madvise_vma_behavior (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="245" width="0.0849%" height="15" fill="rgb(230,59,30)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="255.50"></text></g><g><title>zap_page_range_single (7,822,348 samples, 0.08%)</title><rect x="9.6697%" y="229" width="0.0849%" height="15" fill="rgb(209,121,21)" fg:x="890931626" fg:w="7822348"/><text x="9.9197%" y="239.50"></text></g><g><title>unmap_single_vma (3,866,081 samples, 0.04%)</title><rect x="9.7126%" y="213" width="0.0420%" height="15" fill="rgb(220,109,13)" fg:x="894887893" fg:w="3866081"/><text x="9.9626%" y="223.50"></text></g><g><title>unmap_page_range (3,866,081 samples, 0.04%)</title><rect x="9.7126%" y="197" width="0.0420%" height="15" fill="rgb(232,18,1)" fg:x="894887893" fg:w="3866081"/><text x="9.9626%" y="207.50"></text></g><g><title>zap_pmd_range.isra.0 (3,866,081 samples, 0.04%)</title><rect x="9.7126%" y="181" width="0.0420%" height="15" fill="rgb(215,41,42)" fg:x="894887893" fg:w="3866081"/><text x="9.9626%" y="191.50"></text></g><g><title>_compound_head (3,866,081 samples, 0.04%)</title><rect x="9.7126%" y="165" width="0.0420%" height="15" fill="rgb(224,123,36)" fg:x="894887893" fg:w="3866081"/><text x="9.9626%" y="175.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (3,963,046 samples, 0.04%)</title><rect x="9.7546%" y="437" width="0.0430%" height="15" fill="rgb(240,125,3)" fg:x="898753974" fg:w="3963046"/><text x="10.0046%" y="447.50"></text></g><g><title>keccak::p1600 (3,963,046 samples, 0.04%)</title><rect x="9.7546%" y="421" width="0.0430%" height="15" fill="rgb(205,98,50)" fg:x="898753974" fg:w="3963046"/><text x="10.0046%" y="431.50"></text></g><g><title>faest::aes::aes_prove (3,884,938 samples, 0.04%)</title><rect x="9.7976%" y="437" width="0.0422%" height="15" fill="rgb(205,185,37)" fg:x="902717020" fg:w="3884938"/><text x="10.0476%" y="447.50"></text></g><g><title>faest::em::em_prove (7,606,267 samples, 0.08%)</title><rect x="9.8398%" y="437" width="0.0826%" height="15" fill="rgb(238,207,15)" fg:x="906601958" fg:w="7606267"/><text x="10.0898%" y="447.50"></text></g><g><title>faest::fields::large_fields::BigGaloisField::to_field (3,954,234 samples, 0.04%)</title><rect x="9.9223%" y="437" width="0.0429%" height="15" fill="rgb(213,199,42)" fg:x="914208225" fg:w="3954234"/><text x="10.1723%" y="447.50"></text></g><g><title>__GI___libc_free (3,954,234 samples, 0.04%)</title><rect x="9.9223%" y="421" width="0.0429%" height="15" fill="rgb(235,201,11)" fg:x="914208225" fg:w="3954234"/><text x="10.1723%" y="431.50"></text></g><g><title>faest::universal_hashing::VoleHasherProcess::process (121,814,251 samples, 1.32%)</title><rect x="9.9652%" y="437" width="1.3221%" height="15" fill="rgb(207,46,11)" fg:x="918162459" fg:w="121814251"/><text x="10.2152%" y="447.50"></text></g><g><title>error_entry (3,909,267 samples, 0.04%)</title><rect x="11.2449%" y="421" width="0.0424%" height="15" fill="rgb(241,35,35)" fg:x="1036067443" fg:w="3909267"/><text x="11.4949%" y="431.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (27,354,275 samples, 0.30%)</title><rect x="11.7623%" y="405" width="0.2969%" height="15" fill="rgb(243,32,47)" fg:x="1083734896" fg:w="27354275"/><text x="12.0123%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15,479,998 samples, 0.17%)</title><rect x="12.1418%" y="389" width="0.1680%" height="15" fill="rgb(247,202,23)" fg:x="1118701592" fg:w="15479998"/><text x="12.3918%" y="399.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::ExtendableOutput&gt;::finalize_xof (409,280,456 samples, 4.44%)</title><rect x="12.0592%" y="405" width="4.4421%" height="15" fill="rgb(219,102,11)" fg:x="1111089171" fg:w="409280456"/><text x="12.3092%" y="415.50">&lt;dige..</text></g><g><title>keccak::p1600 (386,188,037 samples, 4.19%)</title><rect x="12.3098%" y="389" width="4.1915%" height="15" fill="rgb(243,110,44)" fg:x="1134181590" fg:w="386188037"/><text x="12.5598%" y="399.50">kecca..</text></g><g><title>&lt;faest::random_oracles::Hasher128Reader as faest::random_oracles::Reader&gt;::read (151,359,618 samples, 1.64%)</title><rect x="16.5013%" y="405" width="1.6428%" height="15" fill="rgb(222,74,54)" fg:x="1520369627" fg:w="151359618"/><text x="16.7513%" y="415.50"></text></g><g><title>keccak::p1600 (151,359,618 samples, 1.64%)</title><rect x="16.5013%" y="389" width="1.6428%" height="15" fill="rgb(216,99,12)" fg:x="1520369627" fg:w="151359618"/><text x="16.7513%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,790,610 samples, 0.08%)</title><rect x="18.1441%" y="389" width="0.0846%" height="15" fill="rgb(226,22,26)" fg:x="1671729245" fg:w="7790610"/><text x="18.3941%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::Hasher256Reader as faest::random_oracles::Reader&gt;::read (204,778,559 samples, 2.22%)</title><rect x="18.1441%" y="405" width="2.2226%" height="15" fill="rgb(217,163,10)" fg:x="1671729245" fg:w="204778559"/><text x="18.3941%" y="415.50">&lt;..</text></g><g><title>keccak::p1600 (196,987,949 samples, 2.14%)</title><rect x="18.2286%" y="389" width="2.1380%" height="15" fill="rgb(213,25,53)" fg:x="1679519855" fg:w="196987949"/><text x="18.4786%" y="399.50">k..</text></g><g><title>aes::ni::aes128::expand_key (3,817,384 samples, 0.04%)</title><rect x="20.3666%" y="389" width="0.0414%" height="15" fill="rgb(252,105,26)" fg:x="1876507804" fg:w="3817384"/><text x="20.6166%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG128 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (21,313,443 samples, 0.23%)</title><rect x="20.3666%" y="405" width="0.2313%" height="15" fill="rgb(220,39,43)" fg:x="1876507804" fg:w="21313443"/><text x="20.6166%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (17,496,059 samples, 0.19%)</title><rect x="20.4080%" y="389" width="0.1899%" height="15" fill="rgb(229,68,48)" fg:x="1880325188" fg:w="17496059"/><text x="20.6580%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (17,496,059 samples, 0.19%)</title><rect x="20.4080%" y="373" width="0.1899%" height="15" fill="rgb(252,8,32)" fg:x="1880325188" fg:w="17496059"/><text x="20.6580%" y="383.50"></text></g><g><title>irq_exit_rcu (17,496,059 samples, 0.19%)</title><rect x="20.4080%" y="357" width="0.1899%" height="15" fill="rgb(223,20,43)" fg:x="1880325188" fg:w="17496059"/><text x="20.6580%" y="367.50"></text></g><g><title>__irq_exit_rcu (17,496,059 samples, 0.19%)</title><rect x="20.4080%" y="341" width="0.1899%" height="15" fill="rgb(229,81,49)" fg:x="1880325188" fg:w="17496059"/><text x="20.6580%" y="351.50"></text></g><g><title>handle_softirqs (17,496,059 samples, 0.19%)</title><rect x="20.4080%" y="325" width="0.1899%" height="15" fill="rgb(236,28,36)" fg:x="1880325188" fg:w="17496059"/><text x="20.6580%" y="335.50"></text></g><g><title>run_rebalance_domains (17,496,059 samples, 0.19%)</title><rect x="20.4080%" y="309" width="0.1899%" height="15" fill="rgb(249,185,26)" fg:x="1880325188" fg:w="17496059"/><text x="20.6580%" y="319.50"></text></g><g><title>update_blocked_averages (17,496,059 samples, 0.19%)</title><rect x="20.4080%" y="293" width="0.1899%" height="15" fill="rgb(249,174,33)" fg:x="1880325188" fg:w="17496059"/><text x="20.6580%" y="303.50"></text></g><g><title>update_load_avg (17,496,059 samples, 0.19%)</title><rect x="20.4080%" y="277" width="0.1899%" height="15" fill="rgb(233,201,37)" fg:x="1880325188" fg:w="17496059"/><text x="20.6580%" y="287.50"></text></g><g><title>&lt;faest::random_oracles::PRG128 as faest::random_oracles::Reader&gt;::read (18,599,428 samples, 0.20%)</title><rect x="20.5979%" y="405" width="0.2019%" height="15" fill="rgb(221,78,26)" fg:x="1897821247" fg:w="18599428"/><text x="20.8479%" y="415.50"></text></g><g><title>&lt;aes::autodetect::Aes128 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (11,450,095 samples, 0.12%)</title><rect x="20.6755%" y="389" width="0.1243%" height="15" fill="rgb(250,127,30)" fg:x="1904970580" fg:w="11450095"/><text x="20.9255%" y="399.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3,829,916 samples, 0.04%)</title><rect x="20.7582%" y="373" width="0.0416%" height="15" fill="rgb(230,49,44)" fg:x="1912590759" fg:w="3829916"/><text x="21.0082%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (3,829,916 samples, 0.04%)</title><rect x="20.7582%" y="357" width="0.0416%" height="15" fill="rgb(229,67,23)" fg:x="1912590759" fg:w="3829916"/><text x="21.0082%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3,829,916 samples, 0.04%)</title><rect x="20.7582%" y="341" width="0.0416%" height="15" fill="rgb(249,83,47)" fg:x="1912590759" fg:w="3829916"/><text x="21.0082%" y="351.50"></text></g><g><title>hrtimer_interrupt (3,829,916 samples, 0.04%)</title><rect x="20.7582%" y="325" width="0.0416%" height="15" fill="rgb(215,43,3)" fg:x="1912590759" fg:w="3829916"/><text x="21.0082%" y="335.50"></text></g><g><title>__hrtimer_run_queues (3,829,916 samples, 0.04%)</title><rect x="20.7582%" y="309" width="0.0416%" height="15" fill="rgb(238,154,13)" fg:x="1912590759" fg:w="3829916"/><text x="21.0082%" y="319.50"></text></g><g><title>tick_nohz_highres_handler (3,829,916 samples, 0.04%)</title><rect x="20.7582%" y="293" width="0.0416%" height="15" fill="rgb(219,56,2)" fg:x="1912590759" fg:w="3829916"/><text x="21.0082%" y="303.50"></text></g><g><title>tick_sched_handle (3,829,916 samples, 0.04%)</title><rect x="20.7582%" y="277" width="0.0416%" height="15" fill="rgb(233,0,4)" fg:x="1912590759" fg:w="3829916"/><text x="21.0082%" y="287.50"></text></g><g><title>update_process_times (3,829,916 samples, 0.04%)</title><rect x="20.7582%" y="261" width="0.0416%" height="15" fill="rgb(235,30,7)" fg:x="1912590759" fg:w="3829916"/><text x="21.0082%" y="271.50"></text></g><g><title>rcu_sched_clock_irq (3,829,916 samples, 0.04%)</title><rect x="20.7582%" y="245" width="0.0416%" height="15" fill="rgb(250,79,13)" fg:x="1912590759" fg:w="3829916"/><text x="21.0082%" y="255.50"></text></g><g><title>rcu_pending (3,829,916 samples, 0.04%)</title><rect x="20.7582%" y="229" width="0.0416%" height="15" fill="rgb(211,146,34)" fg:x="1912590759" fg:w="3829916"/><text x="21.0082%" y="239.50"></text></g><g><title>_ZN3aes2ni6aes19217inv_expanded_keys17h582b77f08a3500d4E.4311 (3,983,931 samples, 0.04%)</title><rect x="20.8430%" y="389" width="0.0432%" height="15" fill="rgb(228,22,38)" fg:x="1920403026" fg:w="3983931"/><text x="21.0930%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,671,218 samples, 0.08%)</title><rect x="20.8863%" y="389" width="0.0833%" height="15" fill="rgb(235,168,5)" fg:x="1924386957" fg:w="7671218"/><text x="21.1363%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (34,945,454 samples, 0.38%)</title><rect x="20.7998%" y="405" width="0.3793%" height="15" fill="rgb(221,155,16)" fg:x="1916420675" fg:w="34945454"/><text x="21.0498%" y="415.50"></text></g><g><title>aes::ni::aes192::expand_key (19,307,954 samples, 0.21%)</title><rect x="20.9695%" y="389" width="0.2096%" height="15" fill="rgb(215,215,53)" fg:x="1932058175" fg:w="19307954"/><text x="21.2195%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::Reader&gt;::read (19,337,180 samples, 0.21%)</title><rect x="21.1791%" y="405" width="0.2099%" height="15" fill="rgb(223,4,10)" fg:x="1951366129" fg:w="19337180"/><text x="21.4291%" y="415.50"></text></g><g><title>&lt;aes::autodetect::Aes192 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (19,337,180 samples, 0.21%)</title><rect x="21.1791%" y="389" width="0.2099%" height="15" fill="rgb(234,103,6)" fg:x="1951366129" fg:w="19337180"/><text x="21.4291%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11,837,827 samples, 0.13%)</title><rect x="21.3890%" y="405" width="0.1285%" height="15" fill="rgb(227,97,0)" fg:x="1970703309" fg:w="11837827"/><text x="21.6390%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,808,600 samples, 0.08%)</title><rect x="21.5604%" y="389" width="0.0848%" height="15" fill="rgb(234,150,53)" fg:x="1986498313" fg:w="7808600"/><text x="21.8104%" y="399.50"></text></g><g><title>faest::vc::commit (1,057,961,528 samples, 11.48%)</title><rect x="11.2873%" y="421" width="11.4825%" height="15" fill="rgb(228,201,54)" fg:x="1039976710" fg:w="1057961528"/><text x="11.5373%" y="431.50">faest::vc::commit</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (115,397,102 samples, 1.25%)</title><rect x="21.5174%" y="405" width="1.2525%" height="15" fill="rgb(222,22,37)" fg:x="1982541136" fg:w="115397102"/><text x="21.7674%" y="415.50"></text></g><g><title>keccak::p1600 (103,631,325 samples, 1.12%)</title><rect x="21.6451%" y="389" width="1.1248%" height="15" fill="rgb(237,53,32)" fg:x="1994306913" fg:w="103631325"/><text x="21.8951%" y="399.50"></text></g><g><title>__irqentry_text_end (7,802,258 samples, 0.08%)</title><rect x="31.0461%" y="373" width="0.0847%" height="15" fill="rgb(233,25,53)" fg:x="2860481519" fg:w="7802258"/><text x="31.2961%" y="383.50"></text></g><g><title>alloc_anon_folio (3,942,592 samples, 0.04%)</title><rect x="31.1308%" y="261" width="0.0428%" height="15" fill="rgb(210,40,34)" fg:x="2868283777" fg:w="3942592"/><text x="31.3808%" y="271.50"></text></g><g><title>vma_alloc_folio (3,942,592 samples, 0.04%)</title><rect x="31.1308%" y="245" width="0.0428%" height="15" fill="rgb(241,220,44)" fg:x="2868283777" fg:w="3942592"/><text x="31.3808%" y="255.50"></text></g><g><title>alloc_pages_mpol (3,942,592 samples, 0.04%)</title><rect x="31.1308%" y="229" width="0.0428%" height="15" fill="rgb(235,28,35)" fg:x="2868283777" fg:w="3942592"/><text x="31.3808%" y="239.50"></text></g><g><title>__alloc_pages (3,942,592 samples, 0.04%)</title><rect x="31.1308%" y="213" width="0.0428%" height="15" fill="rgb(210,56,17)" fg:x="2868283777" fg:w="3942592"/><text x="31.3808%" y="223.50"></text></g><g><title>get_page_from_freelist (3,942,592 samples, 0.04%)</title><rect x="31.1308%" y="197" width="0.0428%" height="15" fill="rgb(224,130,29)" fg:x="2868283777" fg:w="3942592"/><text x="31.3808%" y="207.50"></text></g><g><title>clear_page_erms (3,942,592 samples, 0.04%)</title><rect x="31.1308%" y="181" width="0.0428%" height="15" fill="rgb(235,212,8)" fg:x="2868283777" fg:w="3942592"/><text x="31.3808%" y="191.50"></text></g><g><title>asm_exc_page_fault (7,872,191 samples, 0.09%)</title><rect x="31.1308%" y="373" width="0.0854%" height="15" fill="rgb(223,33,50)" fg:x="2868283777" fg:w="7872191"/><text x="31.3808%" y="383.50"></text></g><g><title>exc_page_fault (7,872,191 samples, 0.09%)</title><rect x="31.1308%" y="357" width="0.0854%" height="15" fill="rgb(219,149,13)" fg:x="2868283777" fg:w="7872191"/><text x="31.3808%" y="367.50"></text></g><g><title>do_user_addr_fault (7,872,191 samples, 0.09%)</title><rect x="31.1308%" y="341" width="0.0854%" height="15" fill="rgb(250,156,29)" fg:x="2868283777" fg:w="7872191"/><text x="31.3808%" y="351.50"></text></g><g><title>handle_mm_fault (7,872,191 samples, 0.09%)</title><rect x="31.1308%" y="325" width="0.0854%" height="15" fill="rgb(216,193,19)" fg:x="2868283777" fg:w="7872191"/><text x="31.3808%" y="335.50"></text></g><g><title>__handle_mm_fault (7,872,191 samples, 0.09%)</title><rect x="31.1308%" y="309" width="0.0854%" height="15" fill="rgb(216,135,14)" fg:x="2868283777" fg:w="7872191"/><text x="31.3808%" y="319.50"></text></g><g><title>handle_pte_fault (7,872,191 samples, 0.09%)</title><rect x="31.1308%" y="293" width="0.0854%" height="15" fill="rgb(241,47,5)" fg:x="2868283777" fg:w="7872191"/><text x="31.3808%" y="303.50"></text></g><g><title>do_anonymous_page (7,872,191 samples, 0.09%)</title><rect x="31.1308%" y="277" width="0.0854%" height="15" fill="rgb(233,42,35)" fg:x="2868283777" fg:w="7872191"/><text x="31.3808%" y="287.50"></text></g><g><title>folio_add_lru_vma (3,929,599 samples, 0.04%)</title><rect x="31.1736%" y="261" width="0.0426%" height="15" fill="rgb(231,13,6)" fg:x="2872226369" fg:w="3929599"/><text x="31.4236%" y="271.50"></text></g><g><title>folio_add_lru (3,929,599 samples, 0.04%)</title><rect x="31.1736%" y="245" width="0.0426%" height="15" fill="rgb(207,181,40)" fg:x="2872226369" fg:w="3929599"/><text x="31.4236%" y="255.50"></text></g><g><title>folio_batch_move_lru (3,929,599 samples, 0.04%)</title><rect x="31.1736%" y="229" width="0.0426%" height="15" fill="rgb(254,173,49)" fg:x="2872226369" fg:w="3929599"/><text x="31.4236%" y="239.50"></text></g><g><title>lru_add_fn (3,929,599 samples, 0.04%)</title><rect x="31.1736%" y="213" width="0.0426%" height="15" fill="rgb(221,1,38)" fg:x="2872226369" fg:w="3929599"/><text x="31.4236%" y="223.50"></text></g><g><title>lru_gen_add_folio (3,929,599 samples, 0.04%)</title><rect x="31.1736%" y="197" width="0.0426%" height="15" fill="rgb(206,124,46)" fg:x="2872226369" fg:w="3929599"/><text x="31.4236%" y="207.50"></text></g><g><title>error_entry (3,938,750 samples, 0.04%)</title><rect x="31.2163%" y="373" width="0.0427%" height="15" fill="rgb(249,21,11)" fg:x="2876155968" fg:w="3938750"/><text x="31.4663%" y="383.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (331,109,157 samples, 3.59%)</title><rect x="27.7086%" y="405" width="3.5937%" height="15" fill="rgb(222,201,40)" fg:x="2552976044" fg:w="331109157"/><text x="27.9586%" y="415.50">&lt;T a..</text></g><g><title>__memcpy_avx_unaligned_erms (43,092,475 samples, 0.47%)</title><rect x="30.8346%" y="389" width="0.4677%" height="15" fill="rgb(235,61,29)" fg:x="2840992726" fg:w="43092475"/><text x="31.0846%" y="399.50"></text></g><g><title>sync_regs (3,990,483 samples, 0.04%)</title><rect x="31.2590%" y="373" width="0.0433%" height="15" fill="rgb(219,207,3)" fg:x="2880094718" fg:w="3990483"/><text x="31.5090%" y="383.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,476,098 samples, 0.08%)</title><rect x="31.3023%" y="389" width="0.0811%" height="15" fill="rgb(222,56,46)" fg:x="2884085201" fg:w="7476098"/><text x="31.5523%" y="399.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3,868,980 samples, 0.04%)</title><rect x="31.3415%" y="373" width="0.0420%" height="15" fill="rgb(239,76,54)" fg:x="2887692319" fg:w="3868980"/><text x="31.5915%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (3,868,980 samples, 0.04%)</title><rect x="31.3415%" y="357" width="0.0420%" height="15" fill="rgb(231,124,27)" fg:x="2887692319" fg:w="3868980"/><text x="31.5915%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3,868,980 samples, 0.04%)</title><rect x="31.3415%" y="341" width="0.0420%" height="15" fill="rgb(249,195,6)" fg:x="2887692319" fg:w="3868980"/><text x="31.5915%" y="351.50"></text></g><g><title>hrtimer_interrupt (3,868,980 samples, 0.04%)</title><rect x="31.3415%" y="325" width="0.0420%" height="15" fill="rgb(237,174,47)" fg:x="2887692319" fg:w="3868980"/><text x="31.5915%" y="335.50"></text></g><g><title>__hrtimer_run_queues (3,868,980 samples, 0.04%)</title><rect x="31.3415%" y="309" width="0.0420%" height="15" fill="rgb(206,201,31)" fg:x="2887692319" fg:w="3868980"/><text x="31.5915%" y="319.50"></text></g><g><title>__remove_hrtimer (3,868,980 samples, 0.04%)</title><rect x="31.3415%" y="293" width="0.0420%" height="15" fill="rgb(231,57,52)" fg:x="2887692319" fg:w="3868980"/><text x="31.5915%" y="303.50"></text></g><g><title>rb_next (3,868,980 samples, 0.04%)</title><rect x="31.3415%" y="277" width="0.0420%" height="15" fill="rgb(248,177,22)" fg:x="2887692319" fg:w="3868980"/><text x="31.5915%" y="287.50"></text></g><g><title>&lt;faest::random_oracles::PRG128 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (25,982,691 samples, 0.28%)</title><rect x="31.3023%" y="405" width="0.2820%" height="15" fill="rgb(215,211,37)" fg:x="2884085201" fg:w="25982691"/><text x="31.5523%" y="415.50"></text></g><g><title>aes::ni::aes128::expand_key (18,506,593 samples, 0.20%)</title><rect x="31.3835%" y="389" width="0.2009%" height="15" fill="rgb(241,128,51)" fg:x="2891561299" fg:w="18506593"/><text x="31.6335%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG128 as faest::random_oracles::Reader&gt;::read (12,960,527 samples, 0.14%)</title><rect x="31.5843%" y="405" width="0.1407%" height="15" fill="rgb(227,165,31)" fg:x="2910067892" fg:w="12960527"/><text x="31.8343%" y="415.50"></text></g><g><title>&lt;aes::autodetect::Aes128 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (12,960,527 samples, 0.14%)</title><rect x="31.5843%" y="389" width="0.1407%" height="15" fill="rgb(228,167,24)" fg:x="2910067892" fg:w="12960527"/><text x="31.8343%" y="399.50"></text></g><g><title>_ZN3aes2ni6aes19217inv_expanded_keys17h582b77f08a3500d4E.4311 (3,876,896 samples, 0.04%)</title><rect x="31.7250%" y="389" width="0.0421%" height="15" fill="rgb(228,143,12)" fg:x="2923028419" fg:w="3876896"/><text x="31.9750%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,622,405 samples, 0.08%)</title><rect x="31.7671%" y="389" width="0.0827%" height="15" fill="rgb(249,149,8)" fg:x="2926905315" fg:w="7622405"/><text x="32.0171%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (34,721,382 samples, 0.38%)</title><rect x="31.7250%" y="405" width="0.3768%" height="15" fill="rgb(243,35,44)" fg:x="2923028419" fg:w="34721382"/><text x="31.9750%" y="415.50"></text></g><g><title>aes::ni::aes192::expand_key (23,222,081 samples, 0.25%)</title><rect x="31.8498%" y="389" width="0.2520%" height="15" fill="rgb(246,89,9)" fg:x="2934527720" fg:w="23222081"/><text x="32.0998%" y="399.50"></text></g><g><title>faest::faest::faest_sign (2,144,653,628 samples, 23.28%)</title><rect x="9.5420%" y="453" width="23.2769%" height="15" fill="rgb(233,213,13)" fg:x="879164596" fg:w="2144653628"/><text x="9.7920%" y="463.50">faest::faest::faest_sign</text></g><g><title>faest::vole::volecommit (1,983,841,514 samples, 21.53%)</title><rect x="11.2873%" y="437" width="21.5315%" height="15" fill="rgb(233,141,41)" fg:x="1039976710" fg:w="1983841514"/><text x="11.5373%" y="447.50">faest::vole::volecommit</text></g><g><title>faest::vole::to_vole_convert (925,879,986 samples, 10.05%)</title><rect x="22.7699%" y="421" width="10.0490%" height="15" fill="rgb(239,167,4)" fg:x="2097938238" fg:w="925879986"/><text x="23.0199%" y="431.50">faest::vole::to..</text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::Reader&gt;::read (66,068,423 samples, 0.72%)</title><rect x="32.1018%" y="405" width="0.7171%" height="15" fill="rgb(209,217,16)" fg:x="2957749801" fg:w="66068423"/><text x="32.3518%" y="415.50"></text></g><g><title>&lt;aes::autodetect::Aes192 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (58,133,199 samples, 0.63%)</title><rect x="32.1880%" y="389" width="0.6309%" height="15" fill="rgb(219,88,35)" fg:x="2965685025" fg:w="58133199"/><text x="32.4380%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19,156,705 samples, 0.21%)</title><rect x="32.9886%" y="437" width="0.2079%" height="15" fill="rgb(220,193,23)" fg:x="3039457243" fg:w="19156705"/><text x="33.2386%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,286,463 samples, 0.17%)</title><rect x="33.0306%" y="421" width="0.1659%" height="15" fill="rgb(230,90,52)" fg:x="3043327485" fg:w="15286463"/><text x="33.2806%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,952,465 samples, 0.04%)</title><rect x="33.1966%" y="421" width="0.0429%" height="15" fill="rgb(252,106,19)" fg:x="3058613948" fg:w="3952465"/><text x="33.4466%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (105,432,519 samples, 1.14%)</title><rect x="33.1966%" y="437" width="1.1443%" height="15" fill="rgb(206,74,20)" fg:x="3058613948" fg:w="105432519"/><text x="33.4466%" y="447.50"></text></g><g><title>faest::universal_hashing::VoleHasherProcess::process (101,480,054 samples, 1.10%)</title><rect x="33.2394%" y="421" width="1.1014%" height="15" fill="rgb(230,138,44)" fg:x="3062566413" fg:w="101480054"/><text x="33.4894%" y="431.50"></text></g><g><title>__memset_avx2_unaligned_erms (3,879,815 samples, 0.04%)</title><rect x="34.2987%" y="405" width="0.0421%" height="15" fill="rgb(235,182,43)" fg:x="3160166652" fg:w="3879815"/><text x="34.5487%" y="415.50"></text></g><g><title>faest::aes::aes_enc_cstrnts (3,978,871 samples, 0.04%)</title><rect x="34.3409%" y="437" width="0.0432%" height="15" fill="rgb(242,16,51)" fg:x="3164046467" fg:w="3978871"/><text x="34.5909%" y="447.50"></text></g><g><title>faest::aes::aes_enc_bkwd (3,978,871 samples, 0.04%)</title><rect x="34.3409%" y="421" width="0.0432%" height="15" fill="rgb(248,9,4)" fg:x="3164046467" fg:w="3978871"/><text x="34.5909%" y="431.50"></text></g><g><title>faest::aes::aes_key_exp_cstrnts (3,973,775 samples, 0.04%)</title><rect x="34.3840%" y="437" width="0.0431%" height="15" fill="rgb(210,31,22)" fg:x="3168025338" fg:w="3973775"/><text x="34.6340%" y="447.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (50,678,700 samples, 0.55%)</title><rect x="34.7678%" y="421" width="0.5500%" height="15" fill="rgb(239,54,39)" fg:x="3203381907" fg:w="50678700"/><text x="35.0178%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,969,769 samples, 0.09%)</title><rect x="35.4031%" y="405" width="0.0865%" height="15" fill="rgb(230,99,41)" fg:x="3261917957" fg:w="7969769"/><text x="35.6531%" y="415.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::ExtendableOutput&gt;::finalize_xof (314,029,327 samples, 3.41%)</title><rect x="35.3178%" y="421" width="3.4083%" height="15" fill="rgb(253,106,12)" fg:x="3254060607" fg:w="314029327"/><text x="35.5678%" y="431.50">&lt;di..</text></g><g><title>keccak::p1600 (298,202,208 samples, 3.24%)</title><rect x="35.4896%" y="405" width="3.2365%" height="15" fill="rgb(213,46,41)" fg:x="3269887726" fg:w="298202208"/><text x="35.7396%" y="415.50">kec..</text></g><g><title>&lt;faest::random_oracles::Hasher128Reader as faest::random_oracles::Reader&gt;::read (64,506,619 samples, 0.70%)</title><rect x="38.7261%" y="421" width="0.7001%" height="15" fill="rgb(215,133,35)" fg:x="3568089934" fg:w="64506619"/><text x="38.9761%" y="431.50"></text></g><g><title>keccak::p1600 (60,624,246 samples, 0.66%)</title><rect x="38.7683%" y="405" width="0.6580%" height="15" fill="rgb(213,28,5)" fg:x="3571972307" fg:w="60624246"/><text x="39.0183%" y="415.50"></text></g><g><title>sync_regs (3,866,201 samples, 0.04%)</title><rect x="39.3843%" y="389" width="0.0420%" height="15" fill="rgb(215,77,49)" fg:x="3628730352" fg:w="3866201"/><text x="39.6343%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::Hasher256Reader as faest::random_oracles::Reader&gt;::read (276,867,110 samples, 3.00%)</title><rect x="39.4263%" y="421" width="3.0050%" height="15" fill="rgb(248,100,22)" fg:x="3632596553" fg:w="276867110"/><text x="39.6763%" y="431.50">&lt;fa..</text></g><g><title>keccak::p1600 (269,122,527 samples, 2.92%)</title><rect x="39.5103%" y="405" width="2.9209%" height="15" fill="rgb(208,67,9)" fg:x="3640341136" fg:w="269122527"/><text x="39.7603%" y="415.50">ke..</text></g><g><title>asm_sysvec_apic_timer_interrupt (3,936,661 samples, 0.04%)</title><rect x="42.3885%" y="389" width="0.0427%" height="15" fill="rgb(219,133,21)" fg:x="3905527002" fg:w="3936661"/><text x="42.6385%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (3,936,661 samples, 0.04%)</title><rect x="42.3885%" y="373" width="0.0427%" height="15" fill="rgb(246,46,29)" fg:x="3905527002" fg:w="3936661"/><text x="42.6385%" y="383.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3,936,661 samples, 0.04%)</title><rect x="42.3885%" y="357" width="0.0427%" height="15" fill="rgb(246,185,52)" fg:x="3905527002" fg:w="3936661"/><text x="42.6385%" y="367.50"></text></g><g><title>hrtimer_interrupt (3,936,661 samples, 0.04%)</title><rect x="42.3885%" y="341" width="0.0427%" height="15" fill="rgb(252,136,11)" fg:x="3905527002" fg:w="3936661"/><text x="42.6385%" y="351.50"></text></g><g><title>__hrtimer_run_queues (3,936,661 samples, 0.04%)</title><rect x="42.3885%" y="325" width="0.0427%" height="15" fill="rgb(219,138,53)" fg:x="3905527002" fg:w="3936661"/><text x="42.6385%" y="335.50"></text></g><g><title>tick_nohz_highres_handler (3,936,661 samples, 0.04%)</title><rect x="42.3885%" y="309" width="0.0427%" height="15" fill="rgb(211,51,23)" fg:x="3905527002" fg:w="3936661"/><text x="42.6385%" y="319.50"></text></g><g><title>tick_sched_handle (3,936,661 samples, 0.04%)</title><rect x="42.3885%" y="293" width="0.0427%" height="15" fill="rgb(247,221,28)" fg:x="3905527002" fg:w="3936661"/><text x="42.6385%" y="303.50"></text></g><g><title>update_process_times (3,936,661 samples, 0.04%)</title><rect x="42.3885%" y="277" width="0.0427%" height="15" fill="rgb(251,222,45)" fg:x="3905527002" fg:w="3936661"/><text x="42.6385%" y="287.50"></text></g><g><title>scheduler_tick (3,936,661 samples, 0.04%)</title><rect x="42.3885%" y="261" width="0.0427%" height="15" fill="rgb(217,162,53)" fg:x="3905527002" fg:w="3936661"/><text x="42.6385%" y="271.50"></text></g><g><title>update_curr (3,936,661 samples, 0.04%)</title><rect x="42.3885%" y="245" width="0.0427%" height="15" fill="rgb(229,93,14)" fg:x="3905527002" fg:w="3936661"/><text x="42.6385%" y="255.50"></text></g><g><title>_ZN3aes2ni6aes12817inv_expanded_keys17ha031418087623d6dE.4305 (3,598,105 samples, 0.04%)</title><rect x="42.4312%" y="405" width="0.0391%" height="15" fill="rgb(209,67,49)" fg:x="3909463663" fg:w="3598105"/><text x="42.6812%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG128 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (7,326,102 samples, 0.08%)</title><rect x="42.4312%" y="421" width="0.0795%" height="15" fill="rgb(213,87,29)" fg:x="3909463663" fg:w="7326102"/><text x="42.6812%" y="431.50"></text></g><g><title>aes::ni::aes128::expand_key (3,727,997 samples, 0.04%)</title><rect x="42.4703%" y="405" width="0.0405%" height="15" fill="rgb(205,151,52)" fg:x="3913061768" fg:w="3727997"/><text x="42.7203%" y="415.50"></text></g><g><title>_ZN3aes2ni6aes19217inv_expanded_keys17h582b77f08a3500d4E.4311 (7,655,367 samples, 0.08%)</title><rect x="42.5107%" y="405" width="0.0831%" height="15" fill="rgb(253,215,39)" fg:x="3916789765" fg:w="7655367"/><text x="42.7607%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,785,977 samples, 0.08%)</title><rect x="42.5938%" y="405" width="0.0845%" height="15" fill="rgb(221,220,41)" fg:x="3924445132" fg:w="7785977"/><text x="42.8438%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (19,276,674 samples, 0.21%)</title><rect x="42.5107%" y="421" width="0.2092%" height="15" fill="rgb(218,133,21)" fg:x="3916789765" fg:w="19276674"/><text x="42.7607%" y="431.50"></text></g><g><title>aes::ni::aes192::expand_key (3,835,330 samples, 0.04%)</title><rect x="42.6783%" y="405" width="0.0416%" height="15" fill="rgb(221,193,43)" fg:x="3932231109" fg:w="3835330"/><text x="42.9283%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::Reader&gt;::read (7,724,767 samples, 0.08%)</title><rect x="42.7199%" y="421" width="0.0838%" height="15" fill="rgb(240,128,52)" fg:x="3936066439" fg:w="7724767"/><text x="42.9699%" y="431.50"></text></g><g><title>&lt;aes::autodetect::Aes192 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (7,724,767 samples, 0.08%)</title><rect x="42.7199%" y="405" width="0.0838%" height="15" fill="rgb(253,114,12)" fg:x="3936066439" fg:w="7724767"/><text x="42.9699%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG256 as faest::random_oracles::Reader&gt;::read (19,511,927 samples, 0.21%)</title><rect x="42.8038%" y="421" width="0.2118%" height="15" fill="rgb(215,223,47)" fg:x="3943791206" fg:w="19511927"/><text x="43.0538%" y="431.50"></text></g><g><title>&lt;aes::autodetect::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (11,729,840 samples, 0.13%)</title><rect x="42.8883%" y="405" width="0.1273%" height="15" fill="rgb(248,225,23)" fg:x="3951573293" fg:w="11729840"/><text x="43.1383%" y="415.50"></text></g><g><title>_ZN3aes2ni6aes25617inv_expanded_keys17hf36206d9db0c2d2bE.4317 (3,979,687 samples, 0.04%)</title><rect x="43.0156%" y="421" width="0.0432%" height="15" fill="rgb(250,108,0)" fg:x="3963303133" fg:w="3979687"/><text x="43.2656%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (30,792,167 samples, 0.33%)</title><rect x="43.0588%" y="421" width="0.3342%" height="15" fill="rgb(228,208,7)" fg:x="3967282820" fg:w="30792167"/><text x="43.3088%" y="431.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (156,197,782 samples, 1.70%)</title><rect x="43.3930%" y="421" width="1.6953%" height="15" fill="rgb(244,45,10)" fg:x="3998074987" fg:w="156197782"/><text x="43.6430%" y="431.50"></text></g><g><title>keccak::p1600 (152,377,030 samples, 1.65%)</title><rect x="43.4344%" y="405" width="1.6538%" height="15" fill="rgb(207,125,25)" fg:x="4001895739" fg:w="152377030"/><text x="43.6844%" y="415.50"></text></g><g><title>faest::vc::reconstruct (986,257,750 samples, 10.70%)</title><rect x="34.4272%" y="437" width="10.7043%" height="15" fill="rgb(210,195,18)" fg:x="3171999113" fg:w="986257750"/><text x="34.6772%" y="447.50">faest::vc::recon..</text></g><g><title>core::core_arch::x86::aes::_mm_aeskeygenassist_si128 (3,984,094 samples, 0.04%)</title><rect x="45.0882%" y="421" width="0.0432%" height="15" fill="rgb(249,80,12)" fg:x="4154272769" fg:w="3984094"/><text x="45.3382%" y="431.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (306,774,784 samples, 3.33%)</title><rect x="49.9443%" y="421" width="3.3296%" height="15" fill="rgb(221,65,9)" fg:x="4601696410" fg:w="306774784"/><text x="50.1943%" y="431.50">&lt;T ..</text></g><g><title>__memcpy_avx_unaligned_erms (23,299,289 samples, 0.25%)</title><rect x="53.0210%" y="405" width="0.2529%" height="15" fill="rgb(235,49,36)" fg:x="4885171905" fg:w="23299289"/><text x="53.2710%" y="415.50"></text></g><g><title>asm_exc_page_fault (7,708,038 samples, 0.08%)</title><rect x="53.1902%" y="389" width="0.0837%" height="15" fill="rgb(225,32,20)" fg:x="4900763156" fg:w="7708038"/><text x="53.4402%" y="399.50"></text></g><g><title>exc_page_fault (7,708,038 samples, 0.08%)</title><rect x="53.1902%" y="373" width="0.0837%" height="15" fill="rgb(215,141,46)" fg:x="4900763156" fg:w="7708038"/><text x="53.4402%" y="383.50"></text></g><g><title>do_user_addr_fault (3,800,941 samples, 0.04%)</title><rect x="53.2327%" y="357" width="0.0413%" height="15" fill="rgb(250,160,47)" fg:x="4904670253" fg:w="3800941"/><text x="53.4827%" y="367.50"></text></g><g><title>handle_mm_fault (3,800,941 samples, 0.04%)</title><rect x="53.2327%" y="341" width="0.0413%" height="15" fill="rgb(216,222,40)" fg:x="4904670253" fg:w="3800941"/><text x="53.4827%" y="351.50"></text></g><g><title>__handle_mm_fault (3,800,941 samples, 0.04%)</title><rect x="53.2327%" y="325" width="0.0413%" height="15" fill="rgb(234,217,39)" fg:x="4904670253" fg:w="3800941"/><text x="53.4827%" y="335.50"></text></g><g><title>handle_pte_fault (3,800,941 samples, 0.04%)</title><rect x="53.2327%" y="309" width="0.0413%" height="15" fill="rgb(207,178,40)" fg:x="4904670253" fg:w="3800941"/><text x="53.4827%" y="319.50"></text></g><g><title>pte_offset_map_nolock (3,800,941 samples, 0.04%)</title><rect x="53.2327%" y="293" width="0.0413%" height="15" fill="rgb(221,136,13)" fg:x="4904670253" fg:w="3800941"/><text x="53.4827%" y="303.50"></text></g><g><title>__pte_offset_map (3,800,941 samples, 0.04%)</title><rect x="53.2327%" y="277" width="0.0413%" height="15" fill="rgb(249,199,10)" fg:x="4904670253" fg:w="3800941"/><text x="53.4827%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3,871,657 samples, 0.04%)</title><rect x="53.2739%" y="405" width="0.0420%" height="15" fill="rgb(249,222,13)" fg:x="4908471194" fg:w="3871657"/><text x="53.5239%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG128 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (7,564,971 samples, 0.08%)</title><rect x="53.2739%" y="421" width="0.0821%" height="15" fill="rgb(244,185,38)" fg:x="4908471194" fg:w="7564971"/><text x="53.5239%" y="431.50"></text></g><g><title>aes::ni::aes128::expand_key (3,693,314 samples, 0.04%)</title><rect x="53.3159%" y="405" width="0.0401%" height="15" fill="rgb(236,202,9)" fg:x="4912342851" fg:w="3693314"/><text x="53.5659%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG128 as faest::random_oracles::Reader&gt;::read (3,579,829 samples, 0.04%)</title><rect x="53.3560%" y="421" width="0.0389%" height="15" fill="rgb(250,229,37)" fg:x="4916036165" fg:w="3579829"/><text x="53.6060%" y="431.50"></text></g><g><title>&lt;aes::autodetect::Aes128 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (3,579,829 samples, 0.04%)</title><rect x="53.3560%" y="405" width="0.0389%" height="15" fill="rgb(206,174,23)" fg:x="4916036165" fg:w="3579829"/><text x="53.6060%" y="415.50"></text></g><g><title>_ZN3aes2ni6aes19217inv_expanded_keys17h582b77f08a3500d4E.4311 (3,806,128 samples, 0.04%)</title><rect x="53.3949%" y="405" width="0.0413%" height="15" fill="rgb(211,33,43)" fg:x="4919615994" fg:w="3806128"/><text x="53.6449%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3,916,173 samples, 0.04%)</title><rect x="53.4362%" y="405" width="0.0425%" height="15" fill="rgb(245,58,50)" fg:x="4923422122" fg:w="3916173"/><text x="53.6862%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (15,529,540 samples, 0.17%)</title><rect x="53.3949%" y="421" width="0.1685%" height="15" fill="rgb(244,68,36)" fg:x="4919615994" fg:w="15529540"/><text x="53.6449%" y="431.50"></text></g><g><title>aes::ni::aes192::expand_key (7,807,239 samples, 0.08%)</title><rect x="53.4787%" y="405" width="0.0847%" height="15" fill="rgb(232,229,15)" fg:x="4927338295" fg:w="7807239"/><text x="53.7287%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::Reader&gt;::read (23,506,601 samples, 0.26%)</title><rect x="53.5634%" y="421" width="0.2551%" height="15" fill="rgb(254,30,23)" fg:x="4935145534" fg:w="23506601"/><text x="53.8134%" y="431.50"></text></g><g><title>&lt;aes::autodetect::Aes192 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (23,506,601 samples, 0.26%)</title><rect x="53.5634%" y="405" width="0.2551%" height="15" fill="rgb(235,160,14)" fg:x="4935145534" fg:w="23506601"/><text x="53.8134%" y="415.50"></text></g><g><title>&lt;aes::ni::Aes256Enc as crypto_common::KeyInit&gt;::new (15,631,059 samples, 0.17%)</title><rect x="53.8185%" y="405" width="0.1697%" height="15" fill="rgb(212,155,44)" fg:x="4958652135" fg:w="15631059"/><text x="54.0685%" y="415.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aeskeygenassist_si128 (11,681,059 samples, 0.13%)</title><rect x="53.8614%" y="389" width="0.1268%" height="15" fill="rgb(226,2,50)" fg:x="4962602135" fg:w="11681059"/><text x="54.1114%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG256 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (23,522,423 samples, 0.26%)</title><rect x="53.8185%" y="421" width="0.2553%" height="15" fill="rgb(234,177,6)" fg:x="4958652135" fg:w="23522423"/><text x="54.0685%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,891,364 samples, 0.09%)</title><rect x="53.9882%" y="405" width="0.0856%" height="15" fill="rgb(217,24,9)" fg:x="4974283194" fg:w="7891364"/><text x="54.2382%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG256 as faest::random_oracles::Reader&gt;::read (63,116,257 samples, 0.69%)</title><rect x="54.0738%" y="421" width="0.6850%" height="15" fill="rgb(220,13,46)" fg:x="4982174558" fg:w="63116257"/><text x="54.3238%" y="431.50"></text></g><g><title>&lt;aes::autodetect::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (63,116,257 samples, 0.69%)</title><rect x="54.0738%" y="405" width="0.6850%" height="15" fill="rgb(239,221,27)" fg:x="4982174558" fg:w="63116257"/><text x="54.3238%" y="415.50"></text></g><g><title>faest::vole::to_vole_convert (890,961,075 samples, 9.67%)</title><rect x="45.1315%" y="437" width="9.6700%" height="15" fill="rgb(222,198,25)" fg:x="4158256863" fg:w="890961075"/><text x="45.3815%" y="447.50">faest::vole::t..</text></g><g><title>asm_sysvec_apic_timer_interrupt (3,927,123 samples, 0.04%)</title><rect x="54.7589%" y="421" width="0.0426%" height="15" fill="rgb(211,99,13)" fg:x="5045290815" fg:w="3927123"/><text x="55.0089%" y="431.50"></text></g><g><title>sysvec_apic_timer_interrupt (3,927,123 samples, 0.04%)</title><rect x="54.7589%" y="405" width="0.0426%" height="15" fill="rgb(232,111,31)" fg:x="5045290815" fg:w="3927123"/><text x="55.0089%" y="415.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3,927,123 samples, 0.04%)</title><rect x="54.7589%" y="389" width="0.0426%" height="15" fill="rgb(245,82,37)" fg:x="5045290815" fg:w="3927123"/><text x="55.0089%" y="399.50"></text></g><g><title>hrtimer_interrupt (3,927,123 samples, 0.04%)</title><rect x="54.7589%" y="373" width="0.0426%" height="15" fill="rgb(227,149,46)" fg:x="5045290815" fg:w="3927123"/><text x="55.0089%" y="383.50"></text></g><g><title>__hrtimer_run_queues (3,927,123 samples, 0.04%)</title><rect x="54.7589%" y="357" width="0.0426%" height="15" fill="rgb(218,36,50)" fg:x="5045290815" fg:w="3927123"/><text x="55.0089%" y="367.50"></text></g><g><title>tick_nohz_highres_handler (3,927,123 samples, 0.04%)</title><rect x="54.7589%" y="341" width="0.0426%" height="15" fill="rgb(226,80,48)" fg:x="5045290815" fg:w="3927123"/><text x="55.0089%" y="351.50"></text></g><g><title>tick_sched_handle (3,927,123 samples, 0.04%)</title><rect x="54.7589%" y="325" width="0.0426%" height="15" fill="rgb(238,224,15)" fg:x="5045290815" fg:w="3927123"/><text x="55.0089%" y="335.50"></text></g><g><title>account_process_tick (3,927,123 samples, 0.04%)</title><rect x="54.7589%" y="309" width="0.0426%" height="15" fill="rgb(241,136,10)" fg:x="5045290815" fg:w="3927123"/><text x="55.0089%" y="319.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (46,166,014 samples, 0.50%)</title><rect x="55.2634%" y="405" width="0.5011%" height="15" fill="rgb(208,32,45)" fg:x="5091775756" fg:w="46166014"/><text x="55.5134%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11,418,328 samples, 0.12%)</title><rect x="56.0146%" y="389" width="0.1239%" height="15" fill="rgb(207,135,9)" fg:x="5160992198" fg:w="11418328"/><text x="56.2646%" y="399.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::ExtendableOutput&gt;::finalize_xof (344,721,959 samples, 3.74%)</title><rect x="55.7645%" y="405" width="3.7414%" height="15" fill="rgb(206,86,44)" fg:x="5137941770" fg:w="344721959"/><text x="56.0145%" y="415.50">&lt;dig..</text></g><g><title>keccak::p1600 (310,253,203 samples, 3.37%)</title><rect x="56.1386%" y="389" width="3.3673%" height="15" fill="rgb(245,177,15)" fg:x="5172410526" fg:w="310253203"/><text x="56.3886%" y="399.50">kec..</text></g><g><title>__memcpy_avx_unaligned_erms (7,774,488 samples, 0.08%)</title><rect x="59.5059%" y="389" width="0.0844%" height="15" fill="rgb(206,64,50)" fg:x="5482663729" fg:w="7774488"/><text x="59.7559%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::Hasher128Reader as faest::random_oracles::Reader&gt;::read (66,495,404 samples, 0.72%)</title><rect x="59.5059%" y="405" width="0.7217%" height="15" fill="rgb(234,36,40)" fg:x="5482663729" fg:w="66495404"/><text x="59.7559%" y="415.50"></text></g><g><title>keccak::p1600 (58,720,916 samples, 0.64%)</title><rect x="59.5903%" y="389" width="0.6373%" height="15" fill="rgb(213,64,8)" fg:x="5490438217" fg:w="58720916"/><text x="59.8403%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,739,470 samples, 0.08%)</title><rect x="60.2698%" y="389" width="0.0840%" height="15" fill="rgb(210,75,36)" fg:x="5553046230" fg:w="7739470"/><text x="60.5198%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::Hasher256Reader as faest::random_oracles::Reader&gt;::read (279,748,346 samples, 3.04%)</title><rect x="60.2276%" y="405" width="3.0362%" height="15" fill="rgb(229,88,21)" fg:x="5549159133" fg:w="279748346"/><text x="60.4776%" y="415.50">&lt;fa..</text></g><g><title>keccak::p1600 (268,121,779 samples, 2.91%)</title><rect x="60.3538%" y="389" width="2.9100%" height="15" fill="rgb(252,204,47)" fg:x="5560785700" fg:w="268121779"/><text x="60.6038%" y="399.50">ke..</text></g><g><title>asm_sysvec_apic_timer_interrupt (3,825,086 samples, 0.04%)</title><rect x="63.2223%" y="373" width="0.0415%" height="15" fill="rgb(208,77,27)" fg:x="5825082393" fg:w="3825086"/><text x="63.4723%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (3,825,086 samples, 0.04%)</title><rect x="63.2223%" y="357" width="0.0415%" height="15" fill="rgb(221,76,26)" fg:x="5825082393" fg:w="3825086"/><text x="63.4723%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3,825,086 samples, 0.04%)</title><rect x="63.2223%" y="341" width="0.0415%" height="15" fill="rgb(225,139,18)" fg:x="5825082393" fg:w="3825086"/><text x="63.4723%" y="351.50"></text></g><g><title>hrtimer_interrupt (3,825,086 samples, 0.04%)</title><rect x="63.2223%" y="325" width="0.0415%" height="15" fill="rgb(230,137,11)" fg:x="5825082393" fg:w="3825086"/><text x="63.4723%" y="335.50"></text></g><g><title>__hrtimer_run_queues (3,825,086 samples, 0.04%)</title><rect x="63.2223%" y="309" width="0.0415%" height="15" fill="rgb(212,28,1)" fg:x="5825082393" fg:w="3825086"/><text x="63.4723%" y="319.50"></text></g><g><title>tick_nohz_highres_handler (3,825,086 samples, 0.04%)</title><rect x="63.2223%" y="293" width="0.0415%" height="15" fill="rgb(248,164,17)" fg:x="5825082393" fg:w="3825086"/><text x="63.4723%" y="303.50"></text></g><g><title>tick_sched_handle (3,825,086 samples, 0.04%)</title><rect x="63.2223%" y="277" width="0.0415%" height="15" fill="rgb(222,171,42)" fg:x="5825082393" fg:w="3825086"/><text x="63.4723%" y="287.50"></text></g><g><title>update_process_times (3,825,086 samples, 0.04%)</title><rect x="63.2223%" y="261" width="0.0415%" height="15" fill="rgb(243,84,45)" fg:x="5825082393" fg:w="3825086"/><text x="63.4723%" y="271.50"></text></g><g><title>scheduler_tick (3,825,086 samples, 0.04%)</title><rect x="63.2223%" y="245" width="0.0415%" height="15" fill="rgb(252,49,23)" fg:x="5825082393" fg:w="3825086"/><text x="63.4723%" y="255.50"></text></g><g><title>&lt;faest::random_oracles::PRG128 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (3,973,803 samples, 0.04%)</title><rect x="63.2638%" y="405" width="0.0431%" height="15" fill="rgb(215,19,7)" fg:x="5828907479" fg:w="3973803"/><text x="63.5138%" y="415.50"></text></g><g><title>_ZN3aes2ni6aes12817inv_expanded_keys17ha031418087623d6dE.4305 (3,973,803 samples, 0.04%)</title><rect x="63.2638%" y="389" width="0.0431%" height="15" fill="rgb(238,81,41)" fg:x="5828907479" fg:w="3973803"/><text x="63.5138%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3,936,443 samples, 0.04%)</title><rect x="63.3070%" y="389" width="0.0427%" height="15" fill="rgb(210,199,37)" fg:x="5832881282" fg:w="3936443"/><text x="63.5570%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (11,908,226 samples, 0.13%)</title><rect x="63.3070%" y="405" width="0.1292%" height="15" fill="rgb(244,192,49)" fg:x="5832881282" fg:w="11908226"/><text x="63.5570%" y="415.50"></text></g><g><title>aes::ni::aes192::expand_key (7,971,783 samples, 0.09%)</title><rect x="63.3497%" y="389" width="0.0865%" height="15" fill="rgb(226,211,11)" fg:x="5836817725" fg:w="7971783"/><text x="63.5997%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::Reader&gt;::read (7,852,927 samples, 0.09%)</title><rect x="63.4362%" y="405" width="0.0852%" height="15" fill="rgb(236,162,54)" fg:x="5844789508" fg:w="7852927"/><text x="63.6862%" y="415.50"></text></g><g><title>&lt;aes::autodetect::Aes192 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (7,852,927 samples, 0.09%)</title><rect x="63.4362%" y="389" width="0.0852%" height="15" fill="rgb(220,229,9)" fg:x="5844789508" fg:w="7852927"/><text x="63.6862%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (23,085,036 samples, 0.25%)</title><rect x="63.5214%" y="405" width="0.2506%" height="15" fill="rgb(250,87,22)" fg:x="5852642435" fg:w="23085036"/><text x="63.7714%" y="415.50"></text></g><g><title>__irqentry_text_end (3,792,045 samples, 0.04%)</title><rect x="63.7308%" y="389" width="0.0412%" height="15" fill="rgb(239,43,17)" fg:x="5871935426" fg:w="3792045"/><text x="63.9808%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,736,491 samples, 0.08%)</title><rect x="63.8962%" y="389" width="0.0840%" height="15" fill="rgb(231,177,25)" fg:x="5887176107" fg:w="7736491"/><text x="64.1462%" y="399.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (140,403,536 samples, 1.52%)</title><rect x="63.7720%" y="405" width="1.5239%" height="15" fill="rgb(219,179,1)" fg:x="5875727471" fg:w="140403536"/><text x="64.0220%" y="415.50"></text></g><g><title>keccak::p1600 (121,218,409 samples, 1.32%)</title><rect x="63.9802%" y="389" width="1.3156%" height="15" fill="rgb(238,219,53)" fg:x="5894912598" fg:w="121218409"/><text x="64.2302%" y="399.50"></text></g><g><title>faest::vc::reconstruct (963,024,593 samples, 10.45%)</title><rect x="54.8855%" y="421" width="10.4522%" height="15" fill="rgb(232,167,36)" fg:x="5056958268" fg:w="963024593"/><text x="55.1355%" y="431.50">faest::vc::reco..</text></g><g><title>core::core_arch::x86::aes::_mm_aeskeygenassist_si128 (3,851,854 samples, 0.04%)</title><rect x="65.2959%" y="405" width="0.0418%" height="15" fill="rgb(244,19,51)" fg:x="6016131007" fg:w="3851854"/><text x="65.5459%" y="415.50"></text></g><g><title>__GI___libc_malloc (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="389" width="0.0420%" height="15" fill="rgb(224,6,22)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="399.50"></text></g><g><title>_int_malloc (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="373" width="0.0420%" height="15" fill="rgb(224,145,5)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="383.50"></text></g><g><title>sysmalloc (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="357" width="0.0420%" height="15" fill="rgb(234,130,49)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="367.50"></text></g><g><title>asm_exc_page_fault (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="341" width="0.0420%" height="15" fill="rgb(254,6,2)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="351.50"></text></g><g><title>exc_page_fault (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="325" width="0.0420%" height="15" fill="rgb(208,96,46)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="335.50"></text></g><g><title>do_user_addr_fault (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="309" width="0.0420%" height="15" fill="rgb(239,3,39)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="319.50"></text></g><g><title>handle_mm_fault (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="293" width="0.0420%" height="15" fill="rgb(233,210,1)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="303.50"></text></g><g><title>__handle_mm_fault (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="277" width="0.0420%" height="15" fill="rgb(244,137,37)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="287.50"></text></g><g><title>handle_pte_fault (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="261" width="0.0420%" height="15" fill="rgb(240,136,2)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="271.50"></text></g><g><title>do_anonymous_page (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="245" width="0.0420%" height="15" fill="rgb(239,18,37)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="255.50"></text></g><g><title>__mem_cgroup_charge (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="229" width="0.0420%" height="15" fill="rgb(218,185,22)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="239.50"></text></g><g><title>try_charge_memcg (3,866,158 samples, 0.04%)</title><rect x="75.3104%" y="213" width="0.0420%" height="15" fill="rgb(225,218,4)" fg:x="6938840108" fg:w="3866158"/><text x="75.5604%" y="223.50"></text></g><g><title>__irqentry_text_end (7,962,042 samples, 0.09%)</title><rect x="75.5194%" y="373" width="0.0864%" height="15" fill="rgb(230,182,32)" fg:x="6958093164" fg:w="7962042"/><text x="75.7694%" y="383.50"></text></g><g><title>__memcpy_avx_unaligned_erms (27,296,310 samples, 0.30%)</title><rect x="75.3524%" y="389" width="0.2963%" height="15" fill="rgb(242,56,43)" fg:x="6942706266" fg:w="27296310"/><text x="75.6024%" y="399.50"></text></g><g><title>asm_exc_page_fault (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="373" width="0.0428%" height="15" fill="rgb(233,99,24)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="383.50"></text></g><g><title>exc_page_fault (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="357" width="0.0428%" height="15" fill="rgb(234,209,42)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="367.50"></text></g><g><title>do_user_addr_fault (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="341" width="0.0428%" height="15" fill="rgb(227,7,12)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="351.50"></text></g><g><title>handle_mm_fault (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="325" width="0.0428%" height="15" fill="rgb(245,203,43)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="335.50"></text></g><g><title>__handle_mm_fault (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="309" width="0.0428%" height="15" fill="rgb(238,205,33)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="319.50"></text></g><g><title>handle_pte_fault (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="293" width="0.0428%" height="15" fill="rgb(231,56,7)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="303.50"></text></g><g><title>do_anonymous_page (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="277" width="0.0428%" height="15" fill="rgb(244,186,29)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="287.50"></text></g><g><title>alloc_anon_folio (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="261" width="0.0428%" height="15" fill="rgb(234,111,31)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="271.50"></text></g><g><title>vma_alloc_folio (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="245" width="0.0428%" height="15" fill="rgb(241,149,10)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="255.50"></text></g><g><title>alloc_pages_mpol (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="229" width="0.0428%" height="15" fill="rgb(249,206,44)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="239.50"></text></g><g><title>__alloc_pages (3,947,370 samples, 0.04%)</title><rect x="75.6058%" y="213" width="0.0428%" height="15" fill="rgb(251,153,30)" fg:x="6966055206" fg:w="3947370"/><text x="75.8558%" y="223.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (395,085,988 samples, 4.29%)</title><rect x="71.4027%" y="405" width="4.2881%" height="15" fill="rgb(239,152,38)" fg:x="6578791854" fg:w="395085988"/><text x="71.6527%" y="415.50">&lt;T as..</text></g><g><title>asm_sysvec_apic_timer_interrupt (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="389" width="0.0421%" height="15" fill="rgb(249,139,47)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="373" width="0.0421%" height="15" fill="rgb(244,64,35)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="383.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="357" width="0.0421%" height="15" fill="rgb(216,46,15)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="367.50"></text></g><g><title>hrtimer_interrupt (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="341" width="0.0421%" height="15" fill="rgb(250,74,19)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="351.50"></text></g><g><title>__hrtimer_run_queues (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="325" width="0.0421%" height="15" fill="rgb(249,42,33)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="335.50"></text></g><g><title>tick_nohz_highres_handler (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="309" width="0.0421%" height="15" fill="rgb(242,149,17)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="319.50"></text></g><g><title>tick_sched_handle (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="293" width="0.0421%" height="15" fill="rgb(244,29,21)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="303.50"></text></g><g><title>update_process_times (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="277" width="0.0421%" height="15" fill="rgb(220,130,37)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="287.50"></text></g><g><title>scheduler_tick (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="261" width="0.0421%" height="15" fill="rgb(211,67,2)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="271.50"></text></g><g><title>trigger_load_balance (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="245" width="0.0421%" height="15" fill="rgb(235,68,52)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="255.50"></text></g><g><title>_find_next_and_bit (3,875,266 samples, 0.04%)</title><rect x="75.6487%" y="229" width="0.0421%" height="15" fill="rgb(246,142,3)" fg:x="6970002576" fg:w="3875266"/><text x="75.8987%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3,958,977 samples, 0.04%)</title><rect x="75.6907%" y="389" width="0.0430%" height="15" fill="rgb(241,25,7)" fg:x="6973877842" fg:w="3958977"/><text x="75.9407%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG128 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (7,894,929 samples, 0.09%)</title><rect x="75.6907%" y="405" width="0.0857%" height="15" fill="rgb(242,119,39)" fg:x="6973877842" fg:w="7894929"/><text x="75.9407%" y="415.50"></text></g><g><title>aes::ni::aes128::expand_key (3,935,952 samples, 0.04%)</title><rect x="75.7337%" y="389" width="0.0427%" height="15" fill="rgb(241,98,45)" fg:x="6977836819" fg:w="3935952"/><text x="75.9837%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG128 as faest::random_oracles::Reader&gt;::read (3,921,585 samples, 0.04%)</title><rect x="75.7764%" y="405" width="0.0426%" height="15" fill="rgb(254,28,30)" fg:x="6981772771" fg:w="3921585"/><text x="76.0264%" y="415.50"></text></g><g><title>&lt;aes::autodetect::Aes128 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (3,921,585 samples, 0.04%)</title><rect x="75.7764%" y="389" width="0.0426%" height="15" fill="rgb(241,142,54)" fg:x="6981772771" fg:w="3921585"/><text x="76.0264%" y="399.50"></text></g><g><title>_ZN3aes2ni6aes19217inv_expanded_keys17h582b77f08a3500d4E.4311 (7,810,416 samples, 0.08%)</title><rect x="75.9028%" y="389" width="0.0848%" height="15" fill="rgb(222,85,15)" fg:x="6993417351" fg:w="7810416"/><text x="76.1528%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (19,459,574 samples, 0.21%)</title><rect x="75.8190%" y="405" width="0.2112%" height="15" fill="rgb(210,85,47)" fg:x="6985694356" fg:w="19459574"/><text x="76.0690%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3,926,163 samples, 0.04%)</title><rect x="75.9876%" y="389" width="0.0426%" height="15" fill="rgb(224,206,25)" fg:x="7001227767" fg:w="3926163"/><text x="76.2376%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::Reader&gt;::read (35,227,928 samples, 0.38%)</title><rect x="76.0302%" y="405" width="0.3823%" height="15" fill="rgb(243,201,19)" fg:x="7005153930" fg:w="35227928"/><text x="76.2802%" y="415.50"></text></g><g><title>&lt;aes::autodetect::Aes192 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (31,371,339 samples, 0.34%)</title><rect x="76.0720%" y="389" width="0.3405%" height="15" fill="rgb(236,59,4)" fg:x="7009010519" fg:w="31371339"/><text x="76.3220%" y="399.50"></text></g><g><title>&lt;aes::ni::Aes256Enc as crypto_common::KeyInit&gt;::new (11,605,568 samples, 0.13%)</title><rect x="76.4550%" y="389" width="0.1260%" height="15" fill="rgb(254,179,45)" fg:x="7044297087" fg:w="11605568"/><text x="76.7050%" y="399.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aeskeygenassist_si128 (11,605,568 samples, 0.13%)</title><rect x="76.4550%" y="373" width="0.1260%" height="15" fill="rgb(226,14,10)" fg:x="7044297087" fg:w="11605568"/><text x="76.7050%" y="383.50"></text></g><g><title>&lt;faest::random_oracles::PRG256 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (19,237,620 samples, 0.21%)</title><rect x="76.4125%" y="405" width="0.2088%" height="15" fill="rgb(244,27,41)" fg:x="7040381858" fg:w="19237620"/><text x="76.6625%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3,716,823 samples, 0.04%)</title><rect x="76.5810%" y="389" width="0.0403%" height="15" fill="rgb(235,35,32)" fg:x="7055902655" fg:w="3716823"/><text x="76.8310%" y="399.50"></text></g><g><title>faest::faest::faest_verify (4,085,702,261 samples, 44.34%)</title><rect x="32.8189%" y="453" width="44.3440%" height="15" fill="rgb(218,68,31)" fg:x="3023818224" fg:w="4085702261"/><text x="33.0689%" y="463.50">faest::faest::faest_verify</text></g><g><title>faest::vole::volereconstruct (2,060,302,547 samples, 22.36%)</title><rect x="54.8015%" y="437" width="22.3614%" height="15" fill="rgb(207,120,37)" fg:x="5049217938" fg:w="2060302547"/><text x="55.0515%" y="447.50">faest::vole::volereconstruct</text></g><g><title>faest::vole::to_vole_convert (1,089,537,624 samples, 11.83%)</title><rect x="65.3377%" y="421" width="11.8253%" height="15" fill="rgb(227,98,0)" fg:x="6019982861" fg:w="1089537624"/><text x="65.5877%" y="431.50">faest::vole::to_vo..</text></g><g><title>&lt;faest::random_oracles::PRG256 as faest::random_oracles::Reader&gt;::read (49,901,007 samples, 0.54%)</title><rect x="76.6213%" y="405" width="0.5416%" height="15" fill="rgb(207,7,3)" fg:x="7059619478" fg:w="49901007"/><text x="76.8713%" y="415.50"></text></g><g><title>&lt;aes::autodetect::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (42,128,075 samples, 0.46%)</title><rect x="76.7057%" y="389" width="0.4572%" height="15" fill="rgb(206,98,19)" fg:x="7067392410" fg:w="42128075"/><text x="76.9557%" y="399.50"></text></g><g><title>faest::faest_test::faest_sign_test (3,933,260 samples, 0.04%)</title><rect x="77.1629%" y="453" width="0.0427%" height="15" fill="rgb(217,5,26)" fg:x="7109520485" fg:w="3933260"/><text x="77.4129%" y="463.50"></text></g><g><title>faest::faest::sigma_to_signature (3,933,260 samples, 0.04%)</title><rect x="77.1629%" y="437" width="0.0427%" height="15" fill="rgb(235,190,38)" fg:x="7109520485" fg:w="3933260"/><text x="77.4129%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,933,260 samples, 0.04%)</title><rect x="77.1629%" y="421" width="0.0427%" height="15" fill="rgb(247,86,24)" fg:x="7109520485" fg:w="3933260"/><text x="77.4129%" y="431.50"></text></g><g><title>faest::vc::commit (3,984,995 samples, 0.04%)</title><rect x="77.2056%" y="453" width="0.0433%" height="15" fill="rgb(205,101,16)" fg:x="7113453745" fg:w="3984995"/><text x="77.4556%" y="463.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (27,517,800 samples, 0.30%)</title><rect x="77.9615%" y="421" width="0.2987%" height="15" fill="rgb(246,168,33)" fg:x="7183096797" fg:w="27517800"/><text x="78.2115%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,897,726 samples, 0.09%)</title><rect x="78.3471%" y="405" width="0.0857%" height="15" fill="rgb(231,114,1)" fg:x="7218629723" fg:w="7897726"/><text x="78.5971%" y="415.50"></text></g><g><title>__memset_avx2_unaligned_erms (3,851,414 samples, 0.04%)</title><rect x="78.4328%" y="405" width="0.0418%" height="15" fill="rgb(207,184,53)" fg:x="7226527449" fg:w="3851414"/><text x="78.6828%" y="415.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::ExtendableOutput&gt;::finalize_xof (280,547,952 samples, 3.04%)</title><rect x="78.2601%" y="421" width="3.0449%" height="15" fill="rgb(224,95,51)" fg:x="7210614597" fg:w="280547952"/><text x="78.5101%" y="431.50">&lt;di..</text></g><g><title>keccak::p1600 (260,783,686 samples, 2.83%)</title><rect x="78.4746%" y="405" width="2.8304%" height="15" fill="rgb(212,188,45)" fg:x="7230378863" fg:w="260783686"/><text x="78.7246%" y="415.50">ke..</text></g><g><title>&lt;faest::random_oracles::Hasher256Reader as faest::random_oracles::Reader&gt;::read (302,852,997 samples, 3.29%)</title><rect x="81.3051%" y="421" width="3.2870%" height="15" fill="rgb(223,154,38)" fg:x="7491162549" fg:w="302852997"/><text x="81.5551%" y="431.50">&lt;fa..</text></g><g><title>keccak::p1600 (295,043,474 samples, 3.20%)</title><rect x="81.3898%" y="405" width="3.2022%" height="15" fill="rgb(251,22,52)" fg:x="7498972072" fg:w="295043474"/><text x="81.6398%" y="415.50">kec..</text></g><g><title>&lt;faest::random_oracles::PRG192 as faest::random_oracles::Reader&gt;::read (7,963,199 samples, 0.09%)</title><rect x="84.5921%" y="421" width="0.0864%" height="15" fill="rgb(229,209,22)" fg:x="7794015546" fg:w="7963199"/><text x="84.8421%" y="431.50"></text></g><g><title>&lt;aes::autodetect::Aes192 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (3,984,669 samples, 0.04%)</title><rect x="84.6352%" y="405" width="0.0432%" height="15" fill="rgb(234,138,34)" fg:x="7797994076" fg:w="3984669"/><text x="84.8852%" y="415.50"></text></g><g><title>&lt;aes::ni::Aes256Enc as crypto_common::KeyInit&gt;::new (71,227,781 samples, 0.77%)</title><rect x="84.7211%" y="405" width="0.7731%" height="15" fill="rgb(212,95,11)" fg:x="7805904589" fg:w="71227781"/><text x="84.9711%" y="415.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aeskeygenassist_si128 (15,825,731 samples, 0.17%)</title><rect x="85.3224%" y="389" width="0.1718%" height="15" fill="rgb(240,179,47)" fg:x="7861306639" fg:w="15825731"/><text x="85.5724%" y="399.50"></text></g><g><title>_ZN3aes2ni6aes25617inv_expanded_keys17hf36206d9db0c2d2bE.4317 (3,982,478 samples, 0.04%)</title><rect x="85.4942%" y="405" width="0.0432%" height="15" fill="rgb(240,163,11)" fg:x="7877132370" fg:w="3982478"/><text x="85.7442%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG256 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (90,388,250 samples, 0.98%)</title><rect x="84.6785%" y="421" width="0.9810%" height="15" fill="rgb(236,37,12)" fg:x="7801978745" fg:w="90388250"/><text x="84.9285%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11,252,147 samples, 0.12%)</title><rect x="85.5374%" y="405" width="0.1221%" height="15" fill="rgb(232,164,16)" fg:x="7881114848" fg:w="11252147"/><text x="85.7874%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG256 as faest::random_oracles::Reader&gt;::read (18,650,101 samples, 0.20%)</title><rect x="85.6595%" y="421" width="0.2024%" height="15" fill="rgb(244,205,15)" fg:x="7892366995" fg:w="18650101"/><text x="85.9095%" y="431.50"></text></g><g><title>&lt;aes::autodetect::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (15,309,623 samples, 0.17%)</title><rect x="85.6958%" y="405" width="0.1662%" height="15" fill="rgb(223,117,47)" fg:x="7895707473" fg:w="15309623"/><text x="85.9458%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15,579,391 samples, 0.17%)</title><rect x="85.8619%" y="421" width="0.1691%" height="15" fill="rgb(244,107,35)" fg:x="7911017096" fg:w="15579391"/><text x="86.1119%" y="431.50"></text></g><g><title>faest::vc::commit (958,258,191 samples, 10.40%)</title><rect x="77.2489%" y="437" width="10.4004%" height="15" fill="rgb(205,140,8)" fg:x="7117438740" fg:w="958258191"/><text x="77.4989%" y="447.50">faest::vc::comm..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (149,100,444 samples, 1.62%)</title><rect x="86.0310%" y="421" width="1.6183%" height="15" fill="rgb(228,84,46)" fg:x="7926596487" fg:w="149100444"/><text x="86.2810%" y="431.50"></text></g><g><title>keccak::p1600 (149,100,444 samples, 1.62%)</title><rect x="86.0310%" y="405" width="1.6183%" height="15" fill="rgb(254,188,9)" fg:x="7926596487" fg:w="149100444"/><text x="86.2810%" y="415.50"></text></g><g><title>__GI___libc_malloc (3,951,056 samples, 0.04%)</title><rect x="97.1993%" y="405" width="0.0429%" height="15" fill="rgb(206,112,54)" fg:x="8955598875" fg:w="3951056"/><text x="97.4493%" y="415.50"></text></g><g><title>_int_malloc (3,951,056 samples, 0.04%)</title><rect x="97.1993%" y="389" width="0.0429%" height="15" fill="rgb(216,84,49)" fg:x="8955598875" fg:w="3951056"/><text x="97.4493%" y="399.50"></text></g><g><title>sysmalloc (3,951,056 samples, 0.04%)</title><rect x="97.1993%" y="373" width="0.0429%" height="15" fill="rgb(214,194,35)" fg:x="8955598875" fg:w="3951056"/><text x="97.4493%" y="383.50"></text></g><g><title>__irqentry_text_end (3,951,056 samples, 0.04%)</title><rect x="97.1993%" y="357" width="0.0429%" height="15" fill="rgb(249,28,3)" fg:x="8955598875" fg:w="3951056"/><text x="97.4493%" y="367.50"></text></g><g><title>__irqentry_text_end (3,986,391 samples, 0.04%)</title><rect x="97.4561%" y="389" width="0.0433%" height="15" fill="rgb(222,56,52)" fg:x="8979260174" fg:w="3986391"/><text x="97.7061%" y="399.50"></text></g><g><title>__mem_cgroup_charge (4,428,052 samples, 0.05%)</title><rect x="97.4993%" y="277" width="0.0481%" height="15" fill="rgb(245,217,50)" fg:x="8983246565" fg:w="4428052"/><text x="97.7493%" y="287.50"></text></g><g><title>mem_cgroup_commit_charge (4,428,052 samples, 0.05%)</title><rect x="97.4993%" y="261" width="0.0481%" height="15" fill="rgb(213,201,24)" fg:x="8983246565" fg:w="4428052"/><text x="97.7493%" y="271.50"></text></g><g><title>__count_memcg_events (4,428,052 samples, 0.05%)</title><rect x="97.4993%" y="245" width="0.0481%" height="15" fill="rgb(248,116,28)" fg:x="8983246565" fg:w="4428052"/><text x="97.7493%" y="255.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (369,453,219 samples, 4.01%)</title><rect x="93.5810%" y="421" width="4.0098%" height="15" fill="rgb(219,72,43)" fg:x="8622221964" fg:w="369453219"/><text x="93.8310%" y="431.50">&lt;T a..</text></g><g><title>__memcpy_avx_unaligned_erms (32,125,252 samples, 0.35%)</title><rect x="97.2421%" y="405" width="0.3487%" height="15" fill="rgb(209,138,14)" fg:x="8959549931" fg:w="32125252"/><text x="97.4921%" y="415.50"></text></g><g><title>asm_exc_page_fault (8,428,618 samples, 0.09%)</title><rect x="97.4993%" y="389" width="0.0915%" height="15" fill="rgb(222,18,33)" fg:x="8983246565" fg:w="8428618"/><text x="97.7493%" y="399.50"></text></g><g><title>exc_page_fault (8,428,618 samples, 0.09%)</title><rect x="97.4993%" y="373" width="0.0915%" height="15" fill="rgb(213,199,7)" fg:x="8983246565" fg:w="8428618"/><text x="97.7493%" y="383.50"></text></g><g><title>do_user_addr_fault (8,428,618 samples, 0.09%)</title><rect x="97.4993%" y="357" width="0.0915%" height="15" fill="rgb(250,110,10)" fg:x="8983246565" fg:w="8428618"/><text x="97.7493%" y="367.50"></text></g><g><title>handle_mm_fault (8,428,618 samples, 0.09%)</title><rect x="97.4993%" y="341" width="0.0915%" height="15" fill="rgb(248,123,6)" fg:x="8983246565" fg:w="8428618"/><text x="97.7493%" y="351.50"></text></g><g><title>__handle_mm_fault (8,428,618 samples, 0.09%)</title><rect x="97.4993%" y="325" width="0.0915%" height="15" fill="rgb(206,91,31)" fg:x="8983246565" fg:w="8428618"/><text x="97.7493%" y="335.50"></text></g><g><title>handle_pte_fault (8,428,618 samples, 0.09%)</title><rect x="97.4993%" y="309" width="0.0915%" height="15" fill="rgb(211,154,13)" fg:x="8983246565" fg:w="8428618"/><text x="97.7493%" y="319.50"></text></g><g><title>do_anonymous_page (8,428,618 samples, 0.09%)</title><rect x="97.4993%" y="293" width="0.0915%" height="15" fill="rgb(225,148,7)" fg:x="8983246565" fg:w="8428618"/><text x="97.7493%" y="303.50"></text></g><g><title>alloc_anon_folio (4,000,566 samples, 0.04%)</title><rect x="97.5474%" y="277" width="0.0434%" height="15" fill="rgb(220,160,43)" fg:x="8987674617" fg:w="4000566"/><text x="97.7974%" y="287.50"></text></g><g><title>vma_alloc_folio (4,000,566 samples, 0.04%)</title><rect x="97.5474%" y="261" width="0.0434%" height="15" fill="rgb(213,52,39)" fg:x="8987674617" fg:w="4000566"/><text x="97.7974%" y="271.50"></text></g><g><title>alloc_pages_mpol (4,000,566 samples, 0.04%)</title><rect x="97.5474%" y="245" width="0.0434%" height="15" fill="rgb(243,137,7)" fg:x="8987674617" fg:w="4000566"/><text x="97.7974%" y="255.50"></text></g><g><title>__alloc_pages (4,000,566 samples, 0.04%)</title><rect x="97.5474%" y="229" width="0.0434%" height="15" fill="rgb(230,79,13)" fg:x="8987674617" fg:w="4000566"/><text x="97.7974%" y="239.50"></text></g><g><title>get_page_from_freelist (4,000,566 samples, 0.04%)</title><rect x="97.5474%" y="213" width="0.0434%" height="15" fill="rgb(247,105,23)" fg:x="8987674617" fg:w="4000566"/><text x="97.7974%" y="223.50"></text></g><g><title>clear_page_erms (4,000,566 samples, 0.04%)</title><rect x="97.5474%" y="197" width="0.0434%" height="15" fill="rgb(223,179,41)" fg:x="8987674617" fg:w="4000566"/><text x="97.7974%" y="207.50"></text></g><g><title>&lt;aes::ni::Aes256Enc as crypto_common::KeyInit&gt;::new (51,531,338 samples, 0.56%)</title><rect x="97.6319%" y="405" width="0.5593%" height="15" fill="rgb(218,9,34)" fg:x="8995459615" fg:w="51531338"/><text x="97.8819%" y="415.50"></text></g><g><title>core::core_arch::x86::aes::_mm_aeskeygenassist_si128 (23,829,494 samples, 0.26%)</title><rect x="97.9325%" y="389" width="0.2586%" height="15" fill="rgb(222,106,8)" fg:x="9023161459" fg:w="23829494"/><text x="98.1825%" y="399.50"></text></g><g><title>&lt;faest::random_oracles::PRG256 as faest::random_oracles::PseudoRandomGenerator&gt;::new_prg (66,488,260 samples, 0.72%)</title><rect x="97.5908%" y="421" width="0.7216%" height="15" fill="rgb(211,220,0)" fg:x="8991675183" fg:w="66488260"/><text x="97.8408%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11,172,490 samples, 0.12%)</title><rect x="98.1912%" y="405" width="0.1213%" height="15" fill="rgb(229,52,16)" fg:x="9046990953" fg:w="11172490"/><text x="98.4412%" y="415.50"></text></g><g><title>&lt;faest::random_oracles::PRG256 as faest::random_oracles::Reader&gt;::read (128,574,325 samples, 1.40%)</title><rect x="98.3124%" y="421" width="1.3955%" height="15" fill="rgb(212,155,18)" fg:x="9058163443" fg:w="128574325"/><text x="98.5624%" y="431.50"></text></g><g><title>&lt;aes::autodetect::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (124,587,167 samples, 1.35%)</title><rect x="98.3557%" y="405" width="1.3522%" height="15" fill="rgb(242,21,14)" fg:x="9062150601" fg:w="124587167"/><text x="98.6057%" y="415.50"></text></g><g><title>faest::vole::volecommit (2,073,165,490 samples, 22.50%)</title><rect x="77.2489%" y="453" width="22.5010%" height="15" fill="rgb(222,19,48)" fg:x="7117438740" fg:w="2073165490"/><text x="77.4989%" y="463.50">faest::vole::volecommit</text></g><g><title>faest::vole::to_vole_convert (1,114,907,299 samples, 12.10%)</title><rect x="87.6493%" y="437" width="12.1006%" height="15" fill="rgb(232,45,27)" fg:x="8075696931" fg:w="1114907299"/><text x="87.8993%" y="447.50">faest::vole::to_vo..</text></g><g><title>__irqentry_text_end (3,866,462 samples, 0.04%)</title><rect x="99.7079%" y="421" width="0.0420%" height="15" fill="rgb(249,103,42)" fg:x="9186737768" fg:w="3866462"/><text x="99.9579%" y="431.50"></text></g><g><title>generic_array::functional::FunctionalSequence::map (3,967,324 samples, 0.04%)</title><rect x="99.7499%" y="453" width="0.0431%" height="15" fill="rgb(246,81,33)" fg:x="9190604230" fg:w="3967324"/><text x="99.9999%" y="463.50"></text></g><g><title>[unknown] (9,144,852,581 samples, 99.25%)</title><rect x="0.6179%" y="469" width="99.2533%" height="15" fill="rgb(252,33,42)" fg:x="56935293" fg:w="9144852581"/><text x="0.8679%" y="479.50">[unknown]</text></g><g><title>keccak::p1600 (7,216,320 samples, 0.08%)</title><rect x="99.7929%" y="453" width="0.0783%" height="15" fill="rgb(209,212,41)" fg:x="9194571554" fg:w="7216320"/><text x="100.0429%" y="463.50"></text></g><g><title>__clone3 (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="469" width="0.0428%" height="15" fill="rgb(207,154,6)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="479.50"></text></g><g><title>start_thread (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="453" width="0.0428%" height="15" fill="rgb(223,64,47)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="463.50"></text></g><g><title>__malloc_arena_thread_freeres (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="437" width="0.0428%" height="15" fill="rgb(211,161,38)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="447.50"></text></g><g><title>tcache_thread_shutdown (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="421" width="0.0428%" height="15" fill="rgb(219,138,40)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="431.50"></text></g><g><title>__GI___libc_free (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="405" width="0.0428%" height="15" fill="rgb(241,228,46)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="415.50"></text></g><g><title>_int_free (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="389" width="0.0428%" height="15" fill="rgb(223,209,38)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="399.50"></text></g><g><title>heap_trim (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="373" width="0.0428%" height="15" fill="rgb(236,164,45)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="383.50"></text></g><g><title>shrink_heap (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="357" width="0.0428%" height="15" fill="rgb(231,15,5)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="367.50"></text></g><g><title>__GI_madvise (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="341" width="0.0428%" height="15" fill="rgb(252,35,15)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="325" width="0.0428%" height="15" fill="rgb(248,181,18)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="335.50"></text></g><g><title>do_syscall_64 (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="309" width="0.0428%" height="15" fill="rgb(233,39,42)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="319.50"></text></g><g><title>x64_sys_call (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="293" width="0.0428%" height="15" fill="rgb(238,110,33)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="303.50"></text></g><g><title>__x64_sys_madvise (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="277" width="0.0428%" height="15" fill="rgb(233,195,10)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="287.50"></text></g><g><title>do_madvise (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="261" width="0.0428%" height="15" fill="rgb(254,105,3)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="271.50"></text></g><g><title>madvise_walk_vmas (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="245" width="0.0428%" height="15" fill="rgb(221,225,9)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="255.50"></text></g><g><title>madvise_vma_behavior (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="229" width="0.0428%" height="15" fill="rgb(224,227,45)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="239.50"></text></g><g><title>zap_page_range_single (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="213" width="0.0428%" height="15" fill="rgb(229,198,43)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="223.50"></text></g><g><title>unmap_single_vma (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="197" width="0.0428%" height="15" fill="rgb(206,209,35)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="207.50"></text></g><g><title>unmap_page_range (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="181" width="0.0428%" height="15" fill="rgb(245,195,53)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="191.50"></text></g><g><title>zap_pmd_range.isra.0 (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="165" width="0.0428%" height="15" fill="rgb(240,92,26)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="175.50"></text></g><g><title>_compound_head (3,945,102 samples, 0.04%)</title><rect x="99.8713%" y="149" width="0.0428%" height="15" fill="rgb(207,40,23)" fg:x="9201787874" fg:w="3945102"/><text x="100.1213%" y="159.50"></text></g><g><title>asm_exc_page_fault (3,957,082 samples, 0.04%)</title><rect x="99.9141%" y="469" width="0.0429%" height="15" fill="rgb(223,111,35)" fg:x="9205732976" fg:w="3957082"/><text x="100.1641%" y="479.50"></text></g><g><title>faest_test::fae (9,195,470,574 samples, 99.80%)</title><rect x="0.1970%" y="485" width="99.8027%" height="15" fill="rgb(229,147,28)" fg:x="18151766" fg:w="9195470574"/><text x="0.4470%" y="495.50">faest_test::fae</text></g><g><title>asm_sysvec_apic_timer_interrupt (3,932,282 samples, 0.04%)</title><rect x="99.9570%" y="469" width="0.0427%" height="15" fill="rgb(211,29,28)" fg:x="9209690058" fg:w="3932282"/><text x="100.2070%" y="479.50"></text></g><g><title>all (9,213,649,666 samples, 100%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(228,72,33)" fg:x="0" fg:w="9213649666"/><text x="0.2500%" y="511.50"></text></g></svg></svg>